// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new412_HH_
#define _Conv1DMac_new412_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2_x_x_x.h"
#include "Conv1DMac_new412_KfY.h"
#include "Conv1DMac_new412_Lf8.h"
#include "Conv1DMac_new412_Mgi.h"
#include "Conv1DMac_new412_Ngs.h"

namespace ap_rtl {

struct Conv1DMac_new412 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;


    // Module declarations
    Conv1DMac_new412(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new412);

    ~Conv1DMac_new412();

    sc_trace_file* mVcdFile;

    Conv1DMac_new412_KfY* weights14_m_weights_3_U;
    Conv1DMac_new412_Lf8* weights14_m_weights_2_U;
    Conv1DMac_new412_Mgi* weights14_m_weights_1_U;
    Conv1DMac_new412_Ngs* weights14_m_weights_s_U;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U101;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U102;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U103;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U104;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights14_m_weights_3_address0;
    sc_signal< sc_logic > weights14_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_2_address0;
    sc_signal< sc_logic > weights14_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_1_address0;
    sc_signal< sc_logic > weights14_m_weights_1_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_s_address0;
    sc_signal< sc_logic > weights14_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1441;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1441_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_158_reg_1468;
    sc_signal< sc_lv<1> > tmp_158_reg_1468_pp0_iter3_reg;
    sc_signal< sc_lv<25> > indvar_flatten8_reg_205;
    sc_signal< sc_lv<16> > indvar_flatten_reg_216;
    sc_signal< sc_lv<7> > nm_reg_227;
    sc_signal< sc_lv<9> > sf_reg_238;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_281_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<25> > indvar_flatten_next8_fu_287_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_381_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1450;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1450_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1450_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_389_p3;
    sc_signal< sc_lv<14> > tmp_138_fu_401_p2;
    sc_signal< sc_lv<14> > tmp_138_reg_1463;
    sc_signal< sc_lv<1> > tmp_158_fu_407_p2;
    sc_signal< sc_lv<1> > tmp_158_reg_1468_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_158_reg_1468_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_2_fu_413_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_425_p3;
    sc_signal< sc_lv<7> > tmp_113_reg_1502;
    sc_signal< sc_lv<1> > tmp_954_reg_1507;
    sc_signal< sc_lv<1> > tmp_144_fu_508_p2;
    sc_signal< sc_lv<1> > tmp_144_reg_1512;
    sc_signal< sc_lv<7> > tmp_116_reg_1517;
    sc_signal< sc_lv<1> > tmp_957_reg_1522;
    sc_signal< sc_lv<1> > tmp_279_1_fu_578_p2;
    sc_signal< sc_lv<1> > tmp_279_1_reg_1527;
    sc_signal< sc_lv<7> > tmp_119_reg_1532;
    sc_signal< sc_lv<1> > tmp_960_reg_1537;
    sc_signal< sc_lv<1> > tmp_279_2_fu_648_p2;
    sc_signal< sc_lv<1> > tmp_279_2_reg_1542;
    sc_signal< sc_lv<7> > tmp_122_reg_1547;
    sc_signal< sc_lv<1> > tmp_963_reg_1552;
    sc_signal< sc_lv<1> > tmp_279_3_fu_718_p2;
    sc_signal< sc_lv<1> > tmp_279_3_reg_1557;
    sc_signal< sc_lv<8> > p_Val2_s_fu_981_p2;
    sc_signal< sc_lv<8> > p_Val2_s_reg_1562;
    sc_signal< sc_lv<8> > p_Val2_23_1_fu_1120_p2;
    sc_signal< sc_lv<8> > p_Val2_23_1_reg_1567;
    sc_signal< sc_lv<8> > p_Val2_23_2_fu_1259_p2;
    sc_signal< sc_lv<8> > p_Val2_23_2_reg_1572;
    sc_signal< sc_lv<8> > p_Val2_23_3_fu_1398_p2;
    sc_signal< sc_lv<8> > p_Val2_23_3_reg_1577;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_139_fu_433_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_4_fu_124;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_753_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_4_fu_128;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_776_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_4_fu_132;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_799_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_4_fu_136;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_822_p2;
    sc_signal< sc_lv<6> > tmp_fu_269_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_293_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_273_p3;
    sc_signal< sc_lv<1> > tmp_884_fu_329_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_323_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_299_p3;
    sc_signal< sc_lv<1> > tmp_165_mid_fu_335_p2;
    sc_signal< sc_lv<1> > tmp_857_fu_347_p2;
    sc_signal< sc_lv<7> > nm_2_fu_341_p2;
    sc_signal< sc_lv<6> > tmp_952_fu_361_p1;
    sc_signal< sc_lv<14> > tmp_164_mid1_fu_365_p3;
    sc_signal< sc_lv<14> > tmp_164_mid_fu_307_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_315_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_353_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_397_p1;
    sc_signal< sc_lv<14> > tmp_164_mid2_fu_373_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_419_p2;
    sc_signal< sc_lv<6> > p_Val2_s_187_fu_448_p0;
    sc_signal< sc_lv<8> > p_Val2_s_187_fu_448_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_440_p1;
    sc_signal< sc_lv<14> > p_Val2_s_187_fu_448_p2;
    sc_signal< sc_lv<1> > tmp_955_fu_480_p1;
    sc_signal< sc_lv<1> > tmp_953_fu_454_p3;
    sc_signal< sc_lv<5> > tmp_142_fu_490_p4;
    sc_signal< sc_lv<1> > tmp_141_fu_484_p2;
    sc_signal< sc_lv<6> > tmp_143_fu_500_p3;
    sc_signal< sc_lv<6> > p_Val2_1_fu_518_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_518_p1;
    sc_signal< sc_lv<14> > p_Val2_1_fu_518_p2;
    sc_signal< sc_lv<1> > tmp_958_fu_550_p1;
    sc_signal< sc_lv<1> > tmp_956_fu_524_p3;
    sc_signal< sc_lv<5> > tmp_148_fu_560_p4;
    sc_signal< sc_lv<1> > tmp_147_fu_554_p2;
    sc_signal< sc_lv<6> > tmp_149_fu_570_p3;
    sc_signal< sc_lv<6> > p_Val2_2_fu_588_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_588_p1;
    sc_signal< sc_lv<14> > p_Val2_2_fu_588_p2;
    sc_signal< sc_lv<1> > tmp_961_fu_620_p1;
    sc_signal< sc_lv<1> > tmp_959_fu_594_p3;
    sc_signal< sc_lv<5> > tmp_152_fu_630_p4;
    sc_signal< sc_lv<1> > tmp_151_fu_624_p2;
    sc_signal< sc_lv<6> > tmp_153_fu_640_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_658_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_658_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_658_p2;
    sc_signal< sc_lv<1> > tmp_964_fu_690_p1;
    sc_signal< sc_lv<1> > tmp_962_fu_664_p3;
    sc_signal< sc_lv<5> > tmp_156_fu_700_p4;
    sc_signal< sc_lv<1> > tmp_155_fu_694_p2;
    sc_signal< sc_lv<6> > tmp_157_fu_710_p3;
    sc_signal< sc_lv<1> > qb_assign_2_fu_739_p2;
    sc_signal< sc_lv<8> > tmp_145_fu_743_p1;
    sc_signal< sc_lv<8> > tmp_114_fu_736_p1;
    sc_signal< sc_lv<8> > tmp1_fu_747_p2;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_762_p2;
    sc_signal< sc_lv<8> > tmp_280_1_fu_766_p1;
    sc_signal< sc_lv<8> > tmp_117_fu_759_p1;
    sc_signal< sc_lv<8> > tmp2_fu_770_p2;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_785_p2;
    sc_signal< sc_lv<8> > tmp_280_2_fu_789_p1;
    sc_signal< sc_lv<8> > tmp_120_fu_782_p1;
    sc_signal< sc_lv<8> > tmp3_fu_793_p2;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_808_p2;
    sc_signal< sc_lv<8> > tmp_280_3_fu_812_p1;
    sc_signal< sc_lv<8> > tmp_123_fu_805_p1;
    sc_signal< sc_lv<8> > tmp4_fu_816_p2;
    sc_signal< sc_lv<8> > tmp_124_fu_848_p66;
    sc_signal< sc_lv<8> > tmp_125_fu_987_p66;
    sc_signal< sc_lv<8> > tmp_126_fu_1126_p66;
    sc_signal< sc_lv<8> > tmp_127_fu_1265_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<25> ap_const_lv25_1000000;
    static const sc_lv<25> ap_const_lv25_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten8_fu_281_p2();
    void thread_exitcond_flatten_fu_293_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next8_fu_287_p2();
    void thread_indvar_flatten_next_fu_425_p3();
    void thread_indvar_flatten_op_fu_419_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_753_p2();
    void thread_macRegisters_1_V_fu_776_p2();
    void thread_macRegisters_2_V_fu_799_p2();
    void thread_macRegisters_3_V_fu_822_p2();
    void thread_nm_2_fu_341_p2();
    void thread_nm_mid2_fu_389_p3();
    void thread_nm_mid_fu_299_p3();
    void thread_nm_t_mid2_fu_381_p3();
    void thread_nm_t_mid_fu_315_p3();
    void thread_not_exitcond_flatten_fu_323_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_440_p1();
    void thread_p_Val2_1_fu_518_p0();
    void thread_p_Val2_1_fu_518_p1();
    void thread_p_Val2_1_fu_518_p2();
    void thread_p_Val2_23_1_fu_1120_p2();
    void thread_p_Val2_23_2_fu_1259_p2();
    void thread_p_Val2_23_3_fu_1398_p2();
    void thread_p_Val2_2_fu_588_p0();
    void thread_p_Val2_2_fu_588_p1();
    void thread_p_Val2_2_fu_588_p2();
    void thread_p_Val2_3_fu_658_p0();
    void thread_p_Val2_3_fu_658_p1();
    void thread_p_Val2_3_fu_658_p2();
    void thread_p_Val2_s_187_fu_448_p0();
    void thread_p_Val2_s_187_fu_448_p1();
    void thread_p_Val2_s_187_fu_448_p2();
    void thread_p_Val2_s_fu_981_p2();
    void thread_qb_assign_2_1_fu_762_p2();
    void thread_qb_assign_2_2_fu_785_p2();
    void thread_qb_assign_2_3_fu_808_p2();
    void thread_qb_assign_2_fu_739_p2();
    void thread_real_start();
    void thread_sf_2_fu_413_p2();
    void thread_sf_cast1_fu_397_p1();
    void thread_sf_mid2_fu_353_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_747_p2();
    void thread_tmp2_fu_770_p2();
    void thread_tmp3_fu_793_p2();
    void thread_tmp4_fu_816_p2();
    void thread_tmp_114_fu_736_p1();
    void thread_tmp_117_fu_759_p1();
    void thread_tmp_120_fu_782_p1();
    void thread_tmp_123_fu_805_p1();
    void thread_tmp_138_fu_401_p2();
    void thread_tmp_139_fu_433_p1();
    void thread_tmp_141_fu_484_p2();
    void thread_tmp_142_fu_490_p4();
    void thread_tmp_143_fu_500_p3();
    void thread_tmp_144_fu_508_p2();
    void thread_tmp_145_fu_743_p1();
    void thread_tmp_147_fu_554_p2();
    void thread_tmp_148_fu_560_p4();
    void thread_tmp_149_fu_570_p3();
    void thread_tmp_151_fu_624_p2();
    void thread_tmp_152_fu_630_p4();
    void thread_tmp_153_fu_640_p3();
    void thread_tmp_155_fu_694_p2();
    void thread_tmp_156_fu_700_p4();
    void thread_tmp_157_fu_710_p3();
    void thread_tmp_158_fu_407_p2();
    void thread_tmp_164_mid1_fu_365_p3();
    void thread_tmp_164_mid2_fu_373_p3();
    void thread_tmp_164_mid_fu_307_p3();
    void thread_tmp_165_mid_fu_335_p2();
    void thread_tmp_279_1_fu_578_p2();
    void thread_tmp_279_2_fu_648_p2();
    void thread_tmp_279_3_fu_718_p2();
    void thread_tmp_280_1_fu_766_p1();
    void thread_tmp_280_2_fu_789_p1();
    void thread_tmp_280_3_fu_812_p1();
    void thread_tmp_857_fu_347_p2();
    void thread_tmp_884_fu_329_p2();
    void thread_tmp_952_fu_361_p1();
    void thread_tmp_953_fu_454_p3();
    void thread_tmp_955_fu_480_p1();
    void thread_tmp_956_fu_524_p3();
    void thread_tmp_958_fu_550_p1();
    void thread_tmp_959_fu_594_p3();
    void thread_tmp_961_fu_620_p1();
    void thread_tmp_962_fu_664_p3();
    void thread_tmp_964_fu_690_p1();
    void thread_tmp_fu_269_p1();
    void thread_tmp_s_fu_273_p3();
    void thread_weights14_m_weights_1_address0();
    void thread_weights14_m_weights_1_ce0();
    void thread_weights14_m_weights_2_address0();
    void thread_weights14_m_weights_2_ce0();
    void thread_weights14_m_weights_3_address0();
    void thread_weights14_m_weights_3_ce0();
    void thread_weights14_m_weights_s_address0();
    void thread_weights14_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

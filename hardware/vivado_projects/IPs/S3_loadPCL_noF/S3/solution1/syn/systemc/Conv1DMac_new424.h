// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new424_HH_
#define _Conv1DMac_new424_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2_x_x_x_x_x_x_x.h"
#include "Conv1DMac_new424_5jm.h"
#include "Conv1DMac_new424_6jw.h"
#include "Conv1DMac_new424_7jG.h"
#include "Conv1DMac_new424_8jQ.h"

namespace ap_rtl {

struct Conv1DMac_new424 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;


    // Module declarations
    Conv1DMac_new424(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new424);

    ~Conv1DMac_new424();

    sc_trace_file* mVcdFile;

    Conv1DMac_new424_5jm* weights18_m_weights_3_U;
    Conv1DMac_new424_6jw* weights18_m_weights_2_U;
    Conv1DMac_new424_7jG* weights18_m_weights_1_U;
    Conv1DMac_new424_8jQ* weights18_m_weights_s_U;
    computeS3_mux_646yd2_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_U182;
    computeS3_mux_646yd2_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_U183;
    computeS3_mux_646yd2_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_U184;
    computeS3_mux_646yd2_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_U185;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights18_m_weights_3_address0;
    sc_signal< sc_logic > weights18_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights18_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights18_m_weights_2_address0;
    sc_signal< sc_logic > weights18_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights18_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights18_m_weights_1_address0;
    sc_signal< sc_logic > weights18_m_weights_1_ce0;
    sc_signal< sc_lv<6> > weights18_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights18_m_weights_s_address0;
    sc_signal< sc_logic > weights18_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights18_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1465;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1465_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_89_reg_1492;
    sc_signal< sc_lv<1> > tmp_89_reg_1492_pp0_iter3_reg;
    sc_signal< sc_lv<21> > indvar_flatten5_reg_229;
    sc_signal< sc_lv<16> > indvar_flatten_reg_240;
    sc_signal< sc_lv<7> > nm_reg_251;
    sc_signal< sc_lv<9> > sf_reg_262;
    sc_signal< sc_lv<1> > exitcond_flatten5_fu_305_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<21> > indvar_flatten_next5_fu_311_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_405_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1474;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1474_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1474_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_413_p3;
    sc_signal< sc_lv<14> > tmp_69_fu_425_p2;
    sc_signal< sc_lv<14> > tmp_69_reg_1487;
    sc_signal< sc_lv<1> > tmp_89_fu_431_p2;
    sc_signal< sc_lv<1> > tmp_89_reg_1492_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_89_reg_1492_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_1_fu_437_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_449_p3;
    sc_signal< sc_lv<7> > tmp_52_reg_1526;
    sc_signal< sc_lv<1> > tmp_912_reg_1531;
    sc_signal< sc_lv<1> > tmp_87_fu_532_p2;
    sc_signal< sc_lv<1> > tmp_87_reg_1536;
    sc_signal< sc_lv<7> > tmp_55_reg_1541;
    sc_signal< sc_lv<1> > tmp_915_reg_1546;
    sc_signal< sc_lv<1> > tmp_255_1_fu_602_p2;
    sc_signal< sc_lv<1> > tmp_255_1_reg_1551;
    sc_signal< sc_lv<7> > tmp_58_reg_1556;
    sc_signal< sc_lv<1> > tmp_918_reg_1561;
    sc_signal< sc_lv<1> > tmp_255_2_fu_672_p2;
    sc_signal< sc_lv<1> > tmp_255_2_reg_1566;
    sc_signal< sc_lv<7> > tmp_61_reg_1571;
    sc_signal< sc_lv<1> > tmp_921_reg_1576;
    sc_signal< sc_lv<1> > tmp_255_3_fu_742_p2;
    sc_signal< sc_lv<1> > tmp_255_3_reg_1581;
    sc_signal< sc_lv<8> > p_Val2_5_fu_1005_p2;
    sc_signal< sc_lv<8> > p_Val2_5_reg_1586;
    sc_signal< sc_lv<8> > p_Val2_21_1_fu_1144_p2;
    sc_signal< sc_lv<8> > p_Val2_21_1_reg_1591;
    sc_signal< sc_lv<8> > p_Val2_21_2_fu_1283_p2;
    sc_signal< sc_lv<8> > p_Val2_21_2_reg_1596;
    sc_signal< sc_lv<8> > p_Val2_21_3_fu_1422_p2;
    sc_signal< sc_lv<8> > p_Val2_21_3_reg_1601;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_70_fu_457_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_1_fu_148;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_777_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_1_fu_152;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_800_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_1_fu_156;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_823_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_1_fu_160;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_846_p2;
    sc_signal< sc_lv<6> > tmp_fu_293_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_317_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_297_p3;
    sc_signal< sc_lv<1> > tmp_881_fu_353_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_347_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_323_p3;
    sc_signal< sc_lv<1> > tmp_88_mid_fu_359_p2;
    sc_signal< sc_lv<1> > tmp_851_fu_371_p2;
    sc_signal< sc_lv<7> > nm_1_fu_365_p2;
    sc_signal< sc_lv<6> > tmp_910_fu_385_p1;
    sc_signal< sc_lv<14> > tmp_87_mid1_fu_389_p3;
    sc_signal< sc_lv<14> > tmp_87_mid_fu_331_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_339_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_377_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_421_p1;
    sc_signal< sc_lv<14> > tmp_87_mid2_fu_397_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_443_p2;
    sc_signal< sc_lv<6> > p_Val2_s_fu_472_p0;
    sc_signal< sc_lv<8> > p_Val2_s_fu_472_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_464_p1;
    sc_signal< sc_lv<14> > p_Val2_s_fu_472_p2;
    sc_signal< sc_lv<1> > tmp_913_fu_504_p1;
    sc_signal< sc_lv<1> > tmp_911_fu_478_p3;
    sc_signal< sc_lv<5> > tmp_73_fu_514_p4;
    sc_signal< sc_lv<1> > tmp_72_fu_508_p2;
    sc_signal< sc_lv<6> > tmp_74_fu_524_p3;
    sc_signal< sc_lv<6> > p_Val2_1_fu_542_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_542_p1;
    sc_signal< sc_lv<14> > p_Val2_1_fu_542_p2;
    sc_signal< sc_lv<1> > tmp_916_fu_574_p1;
    sc_signal< sc_lv<1> > tmp_914_fu_548_p3;
    sc_signal< sc_lv<5> > tmp_77_fu_584_p4;
    sc_signal< sc_lv<1> > tmp_76_fu_578_p2;
    sc_signal< sc_lv<6> > tmp_78_fu_594_p3;
    sc_signal< sc_lv<6> > p_Val2_2_fu_612_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_612_p1;
    sc_signal< sc_lv<14> > p_Val2_2_fu_612_p2;
    sc_signal< sc_lv<1> > tmp_919_fu_644_p1;
    sc_signal< sc_lv<1> > tmp_917_fu_618_p3;
    sc_signal< sc_lv<5> > tmp_81_fu_654_p4;
    sc_signal< sc_lv<1> > tmp_80_fu_648_p2;
    sc_signal< sc_lv<6> > tmp_82_fu_664_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_682_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_682_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_682_p2;
    sc_signal< sc_lv<1> > tmp_922_fu_714_p1;
    sc_signal< sc_lv<1> > tmp_920_fu_688_p3;
    sc_signal< sc_lv<5> > tmp_85_fu_724_p4;
    sc_signal< sc_lv<1> > tmp_84_fu_718_p2;
    sc_signal< sc_lv<6> > tmp_86_fu_734_p3;
    sc_signal< sc_lv<1> > qb_assign_1_fu_763_p2;
    sc_signal< sc_lv<8> > tmp_88_fu_767_p1;
    sc_signal< sc_lv<8> > tmp_53_fu_760_p1;
    sc_signal< sc_lv<8> > tmp1_fu_771_p2;
    sc_signal< sc_lv<1> > qb_assign_1_1_fu_786_p2;
    sc_signal< sc_lv<8> > tmp_256_1_fu_790_p1;
    sc_signal< sc_lv<8> > tmp_56_fu_783_p1;
    sc_signal< sc_lv<8> > tmp2_fu_794_p2;
    sc_signal< sc_lv<1> > qb_assign_1_2_fu_809_p2;
    sc_signal< sc_lv<8> > tmp_256_2_fu_813_p1;
    sc_signal< sc_lv<8> > tmp_59_fu_806_p1;
    sc_signal< sc_lv<8> > tmp3_fu_817_p2;
    sc_signal< sc_lv<1> > qb_assign_1_3_fu_832_p2;
    sc_signal< sc_lv<8> > tmp_256_3_fu_836_p1;
    sc_signal< sc_lv<8> > tmp_62_fu_829_p1;
    sc_signal< sc_lv<8> > tmp4_fu_840_p2;
    sc_signal< sc_lv<8> > tmp_63_fu_872_p66;
    sc_signal< sc_lv<8> > tmp_64_fu_1011_p66;
    sc_signal< sc_lv<8> > tmp_65_fu_1150_p66;
    sc_signal< sc_lv<8> > tmp_66_fu_1289_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<21> ap_const_lv21_100000;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_F5;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_F9;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten5_fu_305_p2();
    void thread_exitcond_flatten_fu_317_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next5_fu_311_p2();
    void thread_indvar_flatten_next_fu_449_p3();
    void thread_indvar_flatten_op_fu_443_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_777_p2();
    void thread_macRegisters_1_V_fu_800_p2();
    void thread_macRegisters_2_V_fu_823_p2();
    void thread_macRegisters_3_V_fu_846_p2();
    void thread_nm_1_fu_365_p2();
    void thread_nm_mid2_fu_413_p3();
    void thread_nm_mid_fu_323_p3();
    void thread_nm_t_mid2_fu_405_p3();
    void thread_nm_t_mid_fu_339_p3();
    void thread_not_exitcond_flatten_fu_347_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_464_p1();
    void thread_p_Val2_1_fu_542_p0();
    void thread_p_Val2_1_fu_542_p1();
    void thread_p_Val2_1_fu_542_p2();
    void thread_p_Val2_21_1_fu_1144_p2();
    void thread_p_Val2_21_2_fu_1283_p2();
    void thread_p_Val2_21_3_fu_1422_p2();
    void thread_p_Val2_2_fu_612_p0();
    void thread_p_Val2_2_fu_612_p1();
    void thread_p_Val2_2_fu_612_p2();
    void thread_p_Val2_3_fu_682_p0();
    void thread_p_Val2_3_fu_682_p1();
    void thread_p_Val2_3_fu_682_p2();
    void thread_p_Val2_5_fu_1005_p2();
    void thread_p_Val2_s_fu_472_p0();
    void thread_p_Val2_s_fu_472_p1();
    void thread_p_Val2_s_fu_472_p2();
    void thread_qb_assign_1_1_fu_786_p2();
    void thread_qb_assign_1_2_fu_809_p2();
    void thread_qb_assign_1_3_fu_832_p2();
    void thread_qb_assign_1_fu_763_p2();
    void thread_real_start();
    void thread_sf_1_fu_437_p2();
    void thread_sf_cast1_fu_421_p1();
    void thread_sf_mid2_fu_377_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_771_p2();
    void thread_tmp2_fu_794_p2();
    void thread_tmp3_fu_817_p2();
    void thread_tmp4_fu_840_p2();
    void thread_tmp_255_1_fu_602_p2();
    void thread_tmp_255_2_fu_672_p2();
    void thread_tmp_255_3_fu_742_p2();
    void thread_tmp_256_1_fu_790_p1();
    void thread_tmp_256_2_fu_813_p1();
    void thread_tmp_256_3_fu_836_p1();
    void thread_tmp_53_fu_760_p1();
    void thread_tmp_56_fu_783_p1();
    void thread_tmp_59_fu_806_p1();
    void thread_tmp_62_fu_829_p1();
    void thread_tmp_69_fu_425_p2();
    void thread_tmp_70_fu_457_p1();
    void thread_tmp_72_fu_508_p2();
    void thread_tmp_73_fu_514_p4();
    void thread_tmp_74_fu_524_p3();
    void thread_tmp_76_fu_578_p2();
    void thread_tmp_77_fu_584_p4();
    void thread_tmp_78_fu_594_p3();
    void thread_tmp_80_fu_648_p2();
    void thread_tmp_81_fu_654_p4();
    void thread_tmp_82_fu_664_p3();
    void thread_tmp_84_fu_718_p2();
    void thread_tmp_851_fu_371_p2();
    void thread_tmp_85_fu_724_p4();
    void thread_tmp_86_fu_734_p3();
    void thread_tmp_87_fu_532_p2();
    void thread_tmp_87_mid1_fu_389_p3();
    void thread_tmp_87_mid2_fu_397_p3();
    void thread_tmp_87_mid_fu_331_p3();
    void thread_tmp_881_fu_353_p2();
    void thread_tmp_88_fu_767_p1();
    void thread_tmp_88_mid_fu_359_p2();
    void thread_tmp_89_fu_431_p2();
    void thread_tmp_910_fu_385_p1();
    void thread_tmp_911_fu_478_p3();
    void thread_tmp_913_fu_504_p1();
    void thread_tmp_914_fu_548_p3();
    void thread_tmp_916_fu_574_p1();
    void thread_tmp_917_fu_618_p3();
    void thread_tmp_919_fu_644_p1();
    void thread_tmp_920_fu_688_p3();
    void thread_tmp_922_fu_714_p1();
    void thread_tmp_fu_293_p1();
    void thread_tmp_s_fu_297_p3();
    void thread_weights18_m_weights_1_address0();
    void thread_weights18_m_weights_1_ce0();
    void thread_weights18_m_weights_2_address0();
    void thread_weights18_m_weights_2_ce0();
    void thread_weights18_m_weights_3_address0();
    void thread_weights18_m_weights_3_ce0();
    void thread_weights18_m_weights_s_address0();
    void thread_weights18_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

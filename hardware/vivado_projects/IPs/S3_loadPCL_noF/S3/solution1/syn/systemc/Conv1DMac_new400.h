// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new400_HH_
#define _Conv1DMac_new400_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2.h"
#include "Conv1DMac_new400_udo.h"
#include "Conv1DMac_new400_vdy.h"
#include "Conv1DMac_new400_wdI.h"
#include "Conv1DMac_new400_xdS.h"

namespace ap_rtl {

struct Conv1DMac_new400 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;


    // Module declarations
    Conv1DMac_new400(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new400);

    ~Conv1DMac_new400();

    sc_trace_file* mVcdFile;

    Conv1DMac_new400_udo* weights11_m_weights_3_U;
    Conv1DMac_new400_vdy* weights11_m_weights_2_U;
    Conv1DMac_new400_wdI* weights11_m_weights_1_U;
    Conv1DMac_new400_xdS* weights11_m_weights_s_U;
    computeS3_mux_646yd2<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_U41;
    computeS3_mux_646yd2<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_U42;
    computeS3_mux_646yd2<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_U43;
    computeS3_mux_646yd2<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_U44;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights11_m_weights_3_address0;
    sc_signal< sc_logic > weights11_m_weights_3_ce0;
    sc_signal< sc_lv<5> > weights11_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights11_m_weights_2_address0;
    sc_signal< sc_logic > weights11_m_weights_2_ce0;
    sc_signal< sc_lv<5> > weights11_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights11_m_weights_1_address0;
    sc_signal< sc_logic > weights11_m_weights_1_ce0;
    sc_signal< sc_lv<5> > weights11_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights11_m_weights_s_address0;
    sc_signal< sc_logic > weights11_m_weights_s_ce0;
    sc_signal< sc_lv<5> > weights11_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1448;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1448_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_227_reg_1475;
    sc_signal< sc_lv<1> > tmp_227_reg_1475_pp0_iter3_reg;
    sc_signal< sc_lv<25> > indvar_flatten2_reg_189;
    sc_signal< sc_lv<16> > indvar_flatten_reg_200;
    sc_signal< sc_lv<7> > nm_reg_211;
    sc_signal< sc_lv<9> > sf_reg_222;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_265_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1448_pp0_iter2_reg;
    sc_signal< sc_lv<25> > indvar_flatten_next1_fu_271_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_365_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1457;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1457_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1457_pp0_iter2_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1457_pp0_iter3_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_373_p3;
    sc_signal< sc_lv<14> > tmp_207_fu_385_p2;
    sc_signal< sc_lv<14> > tmp_207_reg_1470;
    sc_signal< sc_lv<1> > tmp_227_fu_391_p2;
    sc_signal< sc_lv<1> > tmp_227_reg_1475_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_227_reg_1475_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_2_fu_397_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_409_p3;
    sc_signal< sc_lv<8> > tmp_V_reg_1509;
    sc_signal< sc_lv<5> > weights11_m_weights_5_reg_1514;
    sc_signal< sc_lv<5> > weights11_m_weights_7_reg_1519;
    sc_signal< sc_lv<5> > weights11_m_weights_9_reg_1524;
    sc_signal< sc_lv<5> > weights11_m_weights_11_reg_1529;
    sc_signal< sc_lv<7> > tmp1_fu_510_p2;
    sc_signal< sc_lv<7> > tmp1_reg_1534;
    sc_signal< sc_lv<7> > tmp2_fu_599_p2;
    sc_signal< sc_lv<7> > tmp2_reg_1539;
    sc_signal< sc_lv<7> > tmp3_fu_688_p2;
    sc_signal< sc_lv<7> > tmp3_reg_1544;
    sc_signal< sc_lv<7> > tmp4_fu_777_p2;
    sc_signal< sc_lv<7> > tmp4_reg_1549;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_208_fu_417_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_7_fu_108;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_798_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_7_fu_112;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_807_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_7_fu_116;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_816_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_7_fu_120;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_825_p2;
    sc_signal< sc_lv<6> > tmp_fu_253_p1;
    sc_signal< sc_lv<1> > exitcond_flatten2_fu_277_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_257_p3;
    sc_signal< sc_lv<1> > tmp_887_fu_313_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_307_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_283_p3;
    sc_signal< sc_lv<1> > tmp_237_mid_fu_319_p2;
    sc_signal< sc_lv<1> > tmp_863_fu_331_p2;
    sc_signal< sc_lv<7> > nm_2_fu_325_p2;
    sc_signal< sc_lv<6> > tmp_991_fu_345_p1;
    sc_signal< sc_lv<14> > tmp_236_mid1_fu_349_p3;
    sc_signal< sc_lv<14> > tmp_236_mid_fu_291_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_299_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_337_p3;
    sc_signal< sc_lv<14> > tmp_236_mid2_fu_357_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_381_p1;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_403_p2;
    sc_signal< sc_lv<8> > p_Val2_s_fu_430_p0;
    sc_signal< sc_lv<13> > p_08_cast_cast_fu_424_p1;
    sc_signal< sc_lv<5> > p_Val2_s_fu_430_p1;
    sc_signal< sc_lv<13> > p_Val2_s_fu_430_p2;
    sc_signal< sc_lv<6> > tmp_993_fu_444_p4;
    sc_signal< sc_lv<1> > tmp_995_fu_466_p1;
    sc_signal< sc_lv<1> > tmp_992_fu_436_p3;
    sc_signal< sc_lv<5> > tmp_211_fu_476_p4;
    sc_signal< sc_lv<1> > tmp_210_fu_470_p2;
    sc_signal< sc_lv<6> > tmp_212_fu_486_p3;
    sc_signal< sc_lv<1> > tmp_213_fu_494_p2;
    sc_signal< sc_lv<1> > tmp_994_fu_458_p3;
    sc_signal< sc_lv<1> > qb_assign_2_fu_500_p2;
    sc_signal< sc_lv<7> > p_Val2_cast_fu_454_p1;
    sc_signal< sc_lv<7> > tmp_214_cast_fu_506_p1;
    sc_signal< sc_lv<8> > p_Val2_1_fu_519_p0;
    sc_signal< sc_lv<5> > p_Val2_1_fu_519_p1;
    sc_signal< sc_lv<13> > p_Val2_1_fu_519_p2;
    sc_signal< sc_lv<6> > tmp_997_fu_533_p4;
    sc_signal< sc_lv<1> > tmp_999_fu_555_p1;
    sc_signal< sc_lv<1> > tmp_996_fu_525_p3;
    sc_signal< sc_lv<5> > tmp_217_fu_565_p4;
    sc_signal< sc_lv<1> > tmp_216_fu_559_p2;
    sc_signal< sc_lv<6> > tmp_218_fu_575_p3;
    sc_signal< sc_lv<1> > tmp_279_1_fu_583_p2;
    sc_signal< sc_lv<1> > tmp_998_fu_547_p3;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_589_p2;
    sc_signal< sc_lv<7> > p_Val2_93_1_cast_fu_543_p1;
    sc_signal< sc_lv<7> > tmp_280_1_cast_fu_595_p1;
    sc_signal< sc_lv<8> > p_Val2_2_fu_608_p0;
    sc_signal< sc_lv<5> > p_Val2_2_fu_608_p1;
    sc_signal< sc_lv<13> > p_Val2_2_fu_608_p2;
    sc_signal< sc_lv<6> > tmp_1001_fu_622_p4;
    sc_signal< sc_lv<1> > tmp_1003_fu_644_p1;
    sc_signal< sc_lv<1> > tmp_1000_fu_614_p3;
    sc_signal< sc_lv<5> > tmp_221_fu_654_p4;
    sc_signal< sc_lv<1> > tmp_220_fu_648_p2;
    sc_signal< sc_lv<6> > tmp_222_fu_664_p3;
    sc_signal< sc_lv<1> > tmp_279_2_fu_672_p2;
    sc_signal< sc_lv<1> > tmp_1002_fu_636_p3;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_678_p2;
    sc_signal< sc_lv<7> > p_Val2_93_2_cast_fu_632_p1;
    sc_signal< sc_lv<7> > tmp_280_2_cast_fu_684_p1;
    sc_signal< sc_lv<8> > p_Val2_3_fu_697_p0;
    sc_signal< sc_lv<5> > p_Val2_3_fu_697_p1;
    sc_signal< sc_lv<13> > p_Val2_3_fu_697_p2;
    sc_signal< sc_lv<6> > tmp_1005_fu_711_p4;
    sc_signal< sc_lv<1> > tmp_1007_fu_733_p1;
    sc_signal< sc_lv<1> > tmp_1004_fu_703_p3;
    sc_signal< sc_lv<5> > tmp_225_fu_743_p4;
    sc_signal< sc_lv<1> > tmp_224_fu_737_p2;
    sc_signal< sc_lv<6> > tmp_226_fu_753_p3;
    sc_signal< sc_lv<1> > tmp_279_3_fu_761_p2;
    sc_signal< sc_lv<1> > tmp_1006_fu_725_p3;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_767_p2;
    sc_signal< sc_lv<7> > p_Val2_93_3_cast_fu_721_p1;
    sc_signal< sc_lv<7> > tmp_280_3_cast_fu_773_p1;
    sc_signal< sc_lv<8> > tmp1_cast_fu_795_p1;
    sc_signal< sc_lv<8> > tmp2_cast_fu_804_p1;
    sc_signal< sc_lv<8> > tmp3_cast_fu_813_p1;
    sc_signal< sc_lv<8> > tmp4_cast_fu_822_p1;
    sc_signal< sc_lv<8> > tmp_160_fu_851_p66;
    sc_signal< sc_lv<8> > tmp_161_fu_990_p66;
    sc_signal< sc_lv<8> > tmp_162_fu_1129_p66;
    sc_signal< sc_lv<8> > tmp_163_fu_1268_p66;
    sc_signal< sc_lv<8> > p_Val2_23_3_fu_1401_p2;
    sc_signal< sc_lv<8> > p_Val2_23_2_fu_1262_p2;
    sc_signal< sc_lv<8> > p_Val2_23_1_fu_1123_p2;
    sc_signal< sc_lv<8> > p_Val2_4_fu_984_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<25> ap_const_lv25_1000000;
    static const sc_lv<25> ap_const_lv25_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten2_fu_277_p2();
    void thread_exitcond_flatten_fu_265_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next1_fu_271_p2();
    void thread_indvar_flatten_next_fu_409_p3();
    void thread_indvar_flatten_op_fu_403_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_798_p2();
    void thread_macRegisters_1_V_fu_807_p2();
    void thread_macRegisters_2_V_fu_816_p2();
    void thread_macRegisters_3_V_fu_825_p2();
    void thread_nm_2_fu_325_p2();
    void thread_nm_mid2_fu_373_p3();
    void thread_nm_mid_fu_283_p3();
    void thread_nm_t_mid2_fu_365_p3();
    void thread_nm_t_mid_fu_299_p3();
    void thread_not_exitcond_flatten_fu_307_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_424_p1();
    void thread_p_Val2_1_fu_519_p0();
    void thread_p_Val2_1_fu_519_p1();
    void thread_p_Val2_1_fu_519_p2();
    void thread_p_Val2_23_1_fu_1123_p2();
    void thread_p_Val2_23_2_fu_1262_p2();
    void thread_p_Val2_23_3_fu_1401_p2();
    void thread_p_Val2_2_fu_608_p0();
    void thread_p_Val2_2_fu_608_p1();
    void thread_p_Val2_2_fu_608_p2();
    void thread_p_Val2_3_fu_697_p0();
    void thread_p_Val2_3_fu_697_p1();
    void thread_p_Val2_3_fu_697_p2();
    void thread_p_Val2_4_fu_984_p2();
    void thread_p_Val2_93_1_cast_fu_543_p1();
    void thread_p_Val2_93_2_cast_fu_632_p1();
    void thread_p_Val2_93_3_cast_fu_721_p1();
    void thread_p_Val2_cast_fu_454_p1();
    void thread_p_Val2_s_fu_430_p0();
    void thread_p_Val2_s_fu_430_p1();
    void thread_p_Val2_s_fu_430_p2();
    void thread_qb_assign_2_1_fu_589_p2();
    void thread_qb_assign_2_2_fu_678_p2();
    void thread_qb_assign_2_3_fu_767_p2();
    void thread_qb_assign_2_fu_500_p2();
    void thread_real_start();
    void thread_sf_2_fu_397_p2();
    void thread_sf_cast1_fu_381_p1();
    void thread_sf_mid2_fu_337_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_cast_fu_795_p1();
    void thread_tmp1_fu_510_p2();
    void thread_tmp2_cast_fu_804_p1();
    void thread_tmp2_fu_599_p2();
    void thread_tmp3_cast_fu_813_p1();
    void thread_tmp3_fu_688_p2();
    void thread_tmp4_cast_fu_822_p1();
    void thread_tmp4_fu_777_p2();
    void thread_tmp_1000_fu_614_p3();
    void thread_tmp_1001_fu_622_p4();
    void thread_tmp_1002_fu_636_p3();
    void thread_tmp_1003_fu_644_p1();
    void thread_tmp_1004_fu_703_p3();
    void thread_tmp_1005_fu_711_p4();
    void thread_tmp_1006_fu_725_p3();
    void thread_tmp_1007_fu_733_p1();
    void thread_tmp_207_fu_385_p2();
    void thread_tmp_208_fu_417_p1();
    void thread_tmp_210_fu_470_p2();
    void thread_tmp_211_fu_476_p4();
    void thread_tmp_212_fu_486_p3();
    void thread_tmp_213_fu_494_p2();
    void thread_tmp_214_cast_fu_506_p1();
    void thread_tmp_216_fu_559_p2();
    void thread_tmp_217_fu_565_p4();
    void thread_tmp_218_fu_575_p3();
    void thread_tmp_220_fu_648_p2();
    void thread_tmp_221_fu_654_p4();
    void thread_tmp_222_fu_664_p3();
    void thread_tmp_224_fu_737_p2();
    void thread_tmp_225_fu_743_p4();
    void thread_tmp_226_fu_753_p3();
    void thread_tmp_227_fu_391_p2();
    void thread_tmp_236_mid1_fu_349_p3();
    void thread_tmp_236_mid2_fu_357_p3();
    void thread_tmp_236_mid_fu_291_p3();
    void thread_tmp_237_mid_fu_319_p2();
    void thread_tmp_279_1_fu_583_p2();
    void thread_tmp_279_2_fu_672_p2();
    void thread_tmp_279_3_fu_761_p2();
    void thread_tmp_280_1_cast_fu_595_p1();
    void thread_tmp_280_2_cast_fu_684_p1();
    void thread_tmp_280_3_cast_fu_773_p1();
    void thread_tmp_863_fu_331_p2();
    void thread_tmp_887_fu_313_p2();
    void thread_tmp_991_fu_345_p1();
    void thread_tmp_992_fu_436_p3();
    void thread_tmp_993_fu_444_p4();
    void thread_tmp_994_fu_458_p3();
    void thread_tmp_995_fu_466_p1();
    void thread_tmp_996_fu_525_p3();
    void thread_tmp_997_fu_533_p4();
    void thread_tmp_998_fu_547_p3();
    void thread_tmp_999_fu_555_p1();
    void thread_tmp_fu_253_p1();
    void thread_tmp_s_fu_257_p3();
    void thread_weights11_m_weights_1_address0();
    void thread_weights11_m_weights_1_ce0();
    void thread_weights11_m_weights_2_address0();
    void thread_weights11_m_weights_2_ce0();
    void thread_weights11_m_weights_3_address0();
    void thread_weights11_m_weights_3_ce0();
    void thread_weights11_m_weights_s_address0();
    void thread_weights11_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

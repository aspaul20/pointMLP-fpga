// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new424 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights18_m_weights_3_address0;
reg    weights18_m_weights_3_ce0;
wire   [5:0] weights18_m_weights_3_q0;
wire   [13:0] weights18_m_weights_2_address0;
reg    weights18_m_weights_2_ce0;
wire   [5:0] weights18_m_weights_2_q0;
wire   [13:0] weights18_m_weights_1_address0;
reg    weights18_m_weights_1_ce0;
wire   [5:0] weights18_m_weights_1_q0;
wire   [13:0] weights18_m_weights_s_address0;
reg    weights18_m_weights_s_ce0;
wire   [5:0] weights18_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten5_reg_1465;
reg   [0:0] exitcond_flatten5_reg_1465_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_89_reg_1492;
reg   [0:0] tmp_89_reg_1492_pp0_iter3_reg;
reg   [20:0] indvar_flatten5_reg_229;
reg   [15:0] indvar_flatten_reg_240;
reg   [6:0] nm_reg_251;
reg   [8:0] sf_reg_262;
wire   [0:0] exitcond_flatten5_fu_305_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [20:0] indvar_flatten_next5_fu_311_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_405_p3;
reg   [5:0] nm_t_mid2_reg_1474;
reg   [5:0] nm_t_mid2_reg_1474_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1474_pp0_iter2_reg;
wire   [6:0] nm_mid2_fu_413_p3;
wire   [13:0] tmp_69_fu_425_p2;
reg   [13:0] tmp_69_reg_1487;
wire   [0:0] tmp_89_fu_431_p2;
reg   [0:0] tmp_89_reg_1492_pp0_iter1_reg;
reg   [0:0] tmp_89_reg_1492_pp0_iter2_reg;
wire   [8:0] sf_1_fu_437_p2;
wire   [15:0] indvar_flatten_next_fu_449_p3;
reg   [6:0] tmp_52_reg_1526;
reg   [0:0] tmp_912_reg_1531;
wire   [0:0] tmp_87_fu_532_p2;
reg   [0:0] tmp_87_reg_1536;
reg   [6:0] tmp_55_reg_1541;
reg   [0:0] tmp_915_reg_1546;
wire   [0:0] tmp_255_1_fu_602_p2;
reg   [0:0] tmp_255_1_reg_1551;
reg   [6:0] tmp_58_reg_1556;
reg   [0:0] tmp_918_reg_1561;
wire   [0:0] tmp_255_2_fu_672_p2;
reg   [0:0] tmp_255_2_reg_1566;
reg   [6:0] tmp_61_reg_1571;
reg   [0:0] tmp_921_reg_1576;
wire   [0:0] tmp_255_3_fu_742_p2;
reg   [0:0] tmp_255_3_reg_1581;
wire   [7:0] p_Val2_5_fu_1005_p2;
reg   [7:0] p_Val2_5_reg_1586;
wire   [7:0] p_Val2_21_1_fu_1144_p2;
reg   [7:0] p_Val2_21_1_reg_1591;
wire   [7:0] p_Val2_21_2_fu_1283_p2;
reg   [7:0] p_Val2_21_2_reg_1596;
wire   [7:0] p_Val2_21_3_fu_1422_p2;
reg   [7:0] p_Val2_21_3_reg_1601;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_70_fu_457_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_1_fu_148;
wire   [7:0] macRegisters_0_V_fu_777_p2;
reg   [7:0] macRegisters_1_V_1_fu_152;
wire   [7:0] macRegisters_1_V_fu_800_p2;
reg   [7:0] macRegisters_2_V_1_fu_156;
wire   [7:0] macRegisters_2_V_fu_823_p2;
reg   [7:0] macRegisters_3_V_1_fu_160;
wire   [7:0] macRegisters_3_V_fu_846_p2;
wire   [5:0] tmp_fu_293_p1;
wire   [0:0] exitcond_flatten_fu_317_p2;
wire   [13:0] tmp_s_fu_297_p3;
wire   [0:0] tmp_881_fu_353_p2;
wire   [0:0] not_exitcond_flatten_fu_347_p2;
wire   [6:0] nm_mid_fu_323_p3;
wire   [0:0] tmp_88_mid_fu_359_p2;
wire   [0:0] tmp_851_fu_371_p2;
wire   [6:0] nm_1_fu_365_p2;
wire   [5:0] tmp_910_fu_385_p1;
wire   [13:0] tmp_87_mid1_fu_389_p3;
wire   [13:0] tmp_87_mid_fu_331_p3;
wire   [5:0] nm_t_mid_fu_339_p3;
wire   [8:0] sf_mid2_fu_377_p3;
wire   [13:0] sf_cast1_fu_421_p1;
wire   [13:0] tmp_87_mid2_fu_397_p3;
wire   [15:0] indvar_flatten_op_fu_443_p2;
wire  signed [5:0] p_Val2_s_fu_472_p0;
wire  signed [7:0] p_Val2_s_fu_472_p1;
wire  signed [13:0] p_08_cast_cast_fu_464_p1;
wire   [13:0] p_Val2_s_fu_472_p2;
wire   [0:0] tmp_913_fu_504_p1;
wire   [0:0] tmp_911_fu_478_p3;
wire   [4:0] tmp_73_fu_514_p4;
wire   [0:0] tmp_72_fu_508_p2;
wire   [5:0] tmp_74_fu_524_p3;
wire  signed [5:0] p_Val2_1_fu_542_p0;
wire  signed [7:0] p_Val2_1_fu_542_p1;
wire   [13:0] p_Val2_1_fu_542_p2;
wire   [0:0] tmp_916_fu_574_p1;
wire   [0:0] tmp_914_fu_548_p3;
wire   [4:0] tmp_77_fu_584_p4;
wire   [0:0] tmp_76_fu_578_p2;
wire   [5:0] tmp_78_fu_594_p3;
wire  signed [5:0] p_Val2_2_fu_612_p0;
wire  signed [7:0] p_Val2_2_fu_612_p1;
wire   [13:0] p_Val2_2_fu_612_p2;
wire   [0:0] tmp_919_fu_644_p1;
wire   [0:0] tmp_917_fu_618_p3;
wire   [4:0] tmp_81_fu_654_p4;
wire   [0:0] tmp_80_fu_648_p2;
wire   [5:0] tmp_82_fu_664_p3;
wire  signed [5:0] p_Val2_3_fu_682_p0;
wire  signed [7:0] p_Val2_3_fu_682_p1;
wire   [13:0] p_Val2_3_fu_682_p2;
wire   [0:0] tmp_922_fu_714_p1;
wire   [0:0] tmp_920_fu_688_p3;
wire   [4:0] tmp_85_fu_724_p4;
wire   [0:0] tmp_84_fu_718_p2;
wire   [5:0] tmp_86_fu_734_p3;
wire   [0:0] qb_assign_1_fu_763_p2;
wire   [7:0] tmp_88_fu_767_p1;
wire  signed [7:0] tmp_53_fu_760_p1;
wire   [7:0] tmp1_fu_771_p2;
wire   [0:0] qb_assign_1_1_fu_786_p2;
wire   [7:0] tmp_256_1_fu_790_p1;
wire  signed [7:0] tmp_56_fu_783_p1;
wire   [7:0] tmp2_fu_794_p2;
wire   [0:0] qb_assign_1_2_fu_809_p2;
wire   [7:0] tmp_256_2_fu_813_p1;
wire  signed [7:0] tmp_59_fu_806_p1;
wire   [7:0] tmp3_fu_817_p2;
wire   [0:0] qb_assign_1_3_fu_832_p2;
wire   [7:0] tmp_256_3_fu_836_p1;
wire  signed [7:0] tmp_62_fu_829_p1;
wire   [7:0] tmp4_fu_840_p2;
wire   [7:0] tmp_63_fu_872_p66;
wire   [7:0] tmp_64_fu_1011_p66;
wire   [7:0] tmp_65_fu_1150_p66;
wire   [7:0] tmp_66_fu_1289_p66;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new424_5jm #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_3_address0),
    .ce0(weights18_m_weights_3_ce0),
    .q0(weights18_m_weights_3_q0)
);

Conv1DMac_new424_6jw #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_2_address0),
    .ce0(weights18_m_weights_2_ce0),
    .q0(weights18_m_weights_2_q0)
);

Conv1DMac_new424_7jG #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_1_address0),
    .ce0(weights18_m_weights_1_ce0),
    .q0(weights18_m_weights_1_q0)
);

Conv1DMac_new424_8jQ #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_s_address0),
    .ce0(weights18_m_weights_s_ce0),
    .q0(weights18_m_weights_s_q0)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U182(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd10),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd5),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd1),
    .din18(8'd0),
    .din19(8'd7),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd13),
    .din23(8'd0),
    .din24(8'd255),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd251),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd8),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd252),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd10),
    .din53(8'd0),
    .din54(8'd245),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd255),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd16),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1474_pp0_iter2_reg),
    .dout(tmp_63_fu_872_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U183(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd245),
    .din4(8'd0),
    .din5(8'd2),
    .din6(8'd10),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd253),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd1),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd8),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd13),
    .din25(8'd4),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd252),
    .din31(8'd0),
    .din32(8'd254),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd3),
    .din37(8'd12),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd9),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd250),
    .din51(8'd0),
    .din52(8'd251),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1474_pp0_iter2_reg),
    .dout(tmp_64_fu_1011_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U184(
    .din0(8'd0),
    .din1(8'd1),
    .din2(8'd11),
    .din3(8'd1),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd9),
    .din8(8'd16),
    .din9(8'd5),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd11),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd10),
    .din21(8'd0),
    .din22(8'd12),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd255),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd255),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd3),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd255),
    .din49(8'd251),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd253),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd1),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd11),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1474_pp0_iter2_reg),
    .dout(tmp_65_fu_1150_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U185(
    .din0(8'd0),
    .din1(8'd4),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd255),
    .din5(8'd252),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd2),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd253),
    .din15(8'd15),
    .din16(8'd254),
    .din17(8'd11),
    .din18(8'd16),
    .din19(8'd0),
    .din20(8'd255),
    .din21(8'd0),
    .din22(8'd18),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd4),
    .din31(8'd12),
    .din32(8'd0),
    .din33(8'd1),
    .din34(8'd0),
    .din35(8'd18),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd1),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd10),
    .din42(8'd0),
    .din43(8'd13),
    .din44(8'd249),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd254),
    .din49(8'd3),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd2),
    .din58(8'd252),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1474_pp0_iter2_reg),
    .dout(tmp_66_fu_1289_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_305_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten5_reg_229 <= indvar_flatten_next5_fu_311_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten5_reg_229 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_305_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_240 <= indvar_flatten_next_fu_449_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_240 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_1492_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_1_fu_148 <= macRegisters_0_V_fu_777_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_89_reg_1492_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_0_V_1_fu_148 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_1492_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_1_fu_152 <= macRegisters_1_V_fu_800_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_89_reg_1492_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_1_V_1_fu_152 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_1492_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_1_fu_156 <= macRegisters_2_V_fu_823_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_89_reg_1492_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_2_V_1_fu_156 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_1492_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_1_fu_160 <= macRegisters_3_V_fu_846_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_89_reg_1492_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_1_fu_160 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_305_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_251 <= nm_mid2_fu_413_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_251 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_305_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_262 <= sf_1_fu_437_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_262 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten5_reg_1465 <= exitcond_flatten5_fu_305_p2;
        exitcond_flatten5_reg_1465_pp0_iter1_reg <= exitcond_flatten5_reg_1465;
        nm_t_mid2_reg_1474_pp0_iter1_reg <= nm_t_mid2_reg_1474;
        tmp_89_reg_1492_pp0_iter1_reg <= tmp_89_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1474 <= nm_t_mid2_fu_405_p3;
        tmp_69_reg_1487 <= tmp_69_fu_425_p2;
        tmp_89_reg_1492 <= tmp_89_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nm_t_mid2_reg_1474_pp0_iter2_reg <= nm_t_mid2_reg_1474_pp0_iter1_reg;
        tmp_89_reg_1492_pp0_iter2_reg <= tmp_89_reg_1492_pp0_iter1_reg;
        tmp_89_reg_1492_pp0_iter3_reg <= tmp_89_reg_1492_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_89_reg_1492_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_21_1_reg_1591 <= p_Val2_21_1_fu_1144_p2;
        p_Val2_21_2_reg_1596 <= p_Val2_21_2_fu_1283_p2;
        p_Val2_21_3_reg_1601 <= p_Val2_21_3_fu_1422_p2;
        p_Val2_5_reg_1586 <= p_Val2_5_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_255_1_reg_1551 <= tmp_255_1_fu_602_p2;
        tmp_255_2_reg_1566 <= tmp_255_2_fu_672_p2;
        tmp_255_3_reg_1581 <= tmp_255_3_fu_742_p2;
        tmp_52_reg_1526 <= {{p_Val2_s_fu_472_p2[13:7]}};
        tmp_55_reg_1541 <= {{p_Val2_1_fu_542_p2[13:7]}};
        tmp_58_reg_1556 <= {{p_Val2_2_fu_612_p2[13:7]}};
        tmp_61_reg_1571 <= {{p_Val2_3_fu_682_p2[13:7]}};
        tmp_87_reg_1536 <= tmp_87_fu_532_p2;
        tmp_912_reg_1531 <= p_Val2_s_fu_472_p2[32'd6];
        tmp_915_reg_1546 <= p_Val2_1_fu_542_p2[32'd6];
        tmp_918_reg_1561 <= p_Val2_2_fu_612_p2[32'd6];
        tmp_921_reg_1576 <= p_Val2_3_fu_682_p2[32'd6];
    end
end

always @ (*) begin
    if ((exitcond_flatten5_fu_305_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_1_ce0 = 1'b1;
    end else begin
        weights18_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_2_ce0 = 1'b1;
    end else begin
        weights18_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_3_ce0 = 1'b1;
    end else begin
        weights18_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_s_ce0 = 1'b1;
    end else begin
        weights18_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten5_fu_305_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_fu_305_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten5_reg_1465_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_89_reg_1492_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten5_fu_305_p2 = ((indvar_flatten5_reg_229 == 21'd1048576) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_317_p2 = ((indvar_flatten_reg_240 == 16'd16384) ? 1'b1 : 1'b0);

assign indvar_flatten_next5_fu_311_p2 = (21'd1 + indvar_flatten5_reg_229);

assign indvar_flatten_next_fu_449_p3 = ((exitcond_flatten_fu_317_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_443_p2);

assign indvar_flatten_op_fu_443_p2 = (indvar_flatten_reg_240 + 16'd1);

assign macRegisters_0_V_fu_777_p2 = ($signed(tmp_53_fu_760_p1) + $signed(tmp1_fu_771_p2));

assign macRegisters_1_V_fu_800_p2 = ($signed(tmp_56_fu_783_p1) + $signed(tmp2_fu_794_p2));

assign macRegisters_2_V_fu_823_p2 = ($signed(tmp_59_fu_806_p1) + $signed(tmp3_fu_817_p2));

assign macRegisters_3_V_fu_846_p2 = ($signed(tmp_62_fu_829_p1) + $signed(tmp4_fu_840_p2));

assign nm_1_fu_365_p2 = (7'd1 + nm_mid_fu_323_p3);

assign nm_mid2_fu_413_p3 = ((tmp_88_mid_fu_359_p2[0:0] === 1'b1) ? nm_1_fu_365_p2 : nm_mid_fu_323_p3);

assign nm_mid_fu_323_p3 = ((exitcond_flatten_fu_317_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_251);

assign nm_t_mid2_fu_405_p3 = ((tmp_88_mid_fu_359_p2[0:0] === 1'b1) ? tmp_910_fu_385_p1 : nm_t_mid_fu_339_p3);

assign nm_t_mid_fu_339_p3 = ((exitcond_flatten_fu_317_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_293_p1);

assign not_exitcond_flatten_fu_347_p2 = (exitcond_flatten_fu_317_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_21_3_reg_1601}, {p_Val2_21_2_reg_1596}}, {p_Val2_21_1_reg_1591}}, {p_Val2_5_reg_1586}};

assign p_08_cast_cast_fu_464_p1 = $signed(in_V_V_dout);

assign p_Val2_1_fu_542_p0 = weights18_m_weights_2_q0;

assign p_Val2_1_fu_542_p1 = p_08_cast_cast_fu_464_p1;

assign p_Val2_1_fu_542_p2 = ($signed(p_Val2_1_fu_542_p0) * $signed(p_Val2_1_fu_542_p1));

assign p_Val2_21_1_fu_1144_p2 = (macRegisters_1_V_fu_800_p2 + tmp_64_fu_1011_p66);

assign p_Val2_21_2_fu_1283_p2 = (macRegisters_2_V_fu_823_p2 + tmp_65_fu_1150_p66);

assign p_Val2_21_3_fu_1422_p2 = (macRegisters_3_V_fu_846_p2 + tmp_66_fu_1289_p66);

assign p_Val2_2_fu_612_p0 = weights18_m_weights_1_q0;

assign p_Val2_2_fu_612_p1 = p_08_cast_cast_fu_464_p1;

assign p_Val2_2_fu_612_p2 = ($signed(p_Val2_2_fu_612_p0) * $signed(p_Val2_2_fu_612_p1));

assign p_Val2_3_fu_682_p0 = weights18_m_weights_s_q0;

assign p_Val2_3_fu_682_p1 = p_08_cast_cast_fu_464_p1;

assign p_Val2_3_fu_682_p2 = ($signed(p_Val2_3_fu_682_p0) * $signed(p_Val2_3_fu_682_p1));

assign p_Val2_5_fu_1005_p2 = (macRegisters_0_V_fu_777_p2 + tmp_63_fu_872_p66);

assign p_Val2_s_fu_472_p0 = weights18_m_weights_3_q0;

assign p_Val2_s_fu_472_p1 = p_08_cast_cast_fu_464_p1;

assign p_Val2_s_fu_472_p2 = ($signed(p_Val2_s_fu_472_p0) * $signed(p_Val2_s_fu_472_p1));

assign qb_assign_1_1_fu_786_p2 = (tmp_915_reg_1546 & tmp_255_1_reg_1551);

assign qb_assign_1_2_fu_809_p2 = (tmp_918_reg_1561 & tmp_255_2_reg_1566);

assign qb_assign_1_3_fu_832_p2 = (tmp_921_reg_1576 & tmp_255_3_reg_1581);

assign qb_assign_1_fu_763_p2 = (tmp_912_reg_1531 & tmp_87_reg_1536);

assign sf_1_fu_437_p2 = (sf_mid2_fu_377_p3 + 9'd1);

assign sf_cast1_fu_421_p1 = sf_mid2_fu_377_p3;

assign sf_mid2_fu_377_p3 = ((tmp_851_fu_371_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_262);

assign start_out = real_start;

assign tmp1_fu_771_p2 = (tmp_88_fu_767_p1 + macRegisters_0_V_1_fu_148);

assign tmp2_fu_794_p2 = (tmp_256_1_fu_790_p1 + macRegisters_1_V_1_fu_152);

assign tmp3_fu_817_p2 = (tmp_256_2_fu_813_p1 + macRegisters_2_V_1_fu_156);

assign tmp4_fu_840_p2 = (tmp_256_3_fu_836_p1 + macRegisters_3_V_1_fu_160);

assign tmp_255_1_fu_602_p2 = ((tmp_78_fu_594_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_2_fu_672_p2 = ((tmp_82_fu_664_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_3_fu_742_p2 = ((tmp_86_fu_734_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_256_1_fu_790_p1 = qb_assign_1_1_fu_786_p2;

assign tmp_256_2_fu_813_p1 = qb_assign_1_2_fu_809_p2;

assign tmp_256_3_fu_836_p1 = qb_assign_1_3_fu_832_p2;

assign tmp_53_fu_760_p1 = $signed(tmp_52_reg_1526);

assign tmp_56_fu_783_p1 = $signed(tmp_55_reg_1541);

assign tmp_59_fu_806_p1 = $signed(tmp_58_reg_1556);

assign tmp_62_fu_829_p1 = $signed(tmp_61_reg_1571);

assign tmp_69_fu_425_p2 = (sf_cast1_fu_421_p1 + tmp_87_mid2_fu_397_p3);

assign tmp_70_fu_457_p1 = tmp_69_reg_1487;

assign tmp_72_fu_508_p2 = (tmp_913_fu_504_p1 | tmp_911_fu_478_p3);

assign tmp_73_fu_514_p4 = {{p_Val2_s_fu_472_p2[5:1]}};

assign tmp_74_fu_524_p3 = {{tmp_73_fu_514_p4}, {tmp_72_fu_508_p2}};

assign tmp_76_fu_578_p2 = (tmp_916_fu_574_p1 | tmp_914_fu_548_p3);

assign tmp_77_fu_584_p4 = {{p_Val2_1_fu_542_p2[5:1]}};

assign tmp_78_fu_594_p3 = {{tmp_77_fu_584_p4}, {tmp_76_fu_578_p2}};

assign tmp_80_fu_648_p2 = (tmp_919_fu_644_p1 | tmp_917_fu_618_p3);

assign tmp_81_fu_654_p4 = {{p_Val2_2_fu_612_p2[5:1]}};

assign tmp_82_fu_664_p3 = {{tmp_81_fu_654_p4}, {tmp_80_fu_648_p2}};

assign tmp_84_fu_718_p2 = (tmp_922_fu_714_p1 | tmp_920_fu_688_p3);

assign tmp_851_fu_371_p2 = (tmp_88_mid_fu_359_p2 | exitcond_flatten_fu_317_p2);

assign tmp_85_fu_724_p4 = {{p_Val2_3_fu_682_p2[5:1]}};

assign tmp_86_fu_734_p3 = {{tmp_85_fu_724_p4}, {tmp_84_fu_718_p2}};

assign tmp_87_fu_532_p2 = ((tmp_74_fu_524_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_87_mid1_fu_389_p3 = {{tmp_910_fu_385_p1}, {8'd0}};

assign tmp_87_mid2_fu_397_p3 = ((tmp_88_mid_fu_359_p2[0:0] === 1'b1) ? tmp_87_mid1_fu_389_p3 : tmp_87_mid_fu_331_p3);

assign tmp_87_mid_fu_331_p3 = ((exitcond_flatten_fu_317_p2[0:0] === 1'b1) ? 14'd0 : tmp_s_fu_297_p3);

assign tmp_881_fu_353_p2 = ((sf_reg_262 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_88_fu_767_p1 = qb_assign_1_fu_763_p2;

assign tmp_88_mid_fu_359_p2 = (tmp_881_fu_353_p2 & not_exitcond_flatten_fu_347_p2);

assign tmp_89_fu_431_p2 = ((sf_mid2_fu_377_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_910_fu_385_p1 = nm_1_fu_365_p2[5:0];

assign tmp_911_fu_478_p3 = p_Val2_s_fu_472_p2[32'd13];

assign tmp_913_fu_504_p1 = p_Val2_s_fu_472_p2[0:0];

assign tmp_914_fu_548_p3 = p_Val2_1_fu_542_p2[32'd13];

assign tmp_916_fu_574_p1 = p_Val2_1_fu_542_p2[0:0];

assign tmp_917_fu_618_p3 = p_Val2_2_fu_612_p2[32'd13];

assign tmp_919_fu_644_p1 = p_Val2_2_fu_612_p2[0:0];

assign tmp_920_fu_688_p3 = p_Val2_3_fu_682_p2[32'd13];

assign tmp_922_fu_714_p1 = p_Val2_3_fu_682_p2[0:0];

assign tmp_fu_293_p1 = nm_reg_251[5:0];

assign tmp_s_fu_297_p3 = {{tmp_fu_293_p1}, {8'd0}};

assign weights18_m_weights_1_address0 = tmp_70_fu_457_p1;

assign weights18_m_weights_2_address0 = tmp_70_fu_457_p1;

assign weights18_m_weights_3_address0 = tmp_70_fu_457_p1;

assign weights18_m_weights_s_address0 = tmp_70_fu_457_p1;

endmodule //Conv1DMac_new424

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new400 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights11_m_weights_3_address0;
reg    weights11_m_weights_3_ce0;
wire   [4:0] weights11_m_weights_3_q0;
wire   [13:0] weights11_m_weights_2_address0;
reg    weights11_m_weights_2_ce0;
wire   [4:0] weights11_m_weights_2_q0;
wire   [13:0] weights11_m_weights_1_address0;
reg    weights11_m_weights_1_ce0;
wire   [4:0] weights11_m_weights_1_q0;
wire   [13:0] weights11_m_weights_s_address0;
reg    weights11_m_weights_s_ce0;
wire   [4:0] weights11_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1448;
reg   [0:0] exitcond_flatten_reg_1448_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_227_reg_1475;
reg   [0:0] tmp_227_reg_1475_pp0_iter3_reg;
reg   [24:0] indvar_flatten2_reg_189;
reg   [15:0] indvar_flatten_reg_200;
reg   [6:0] nm_reg_211;
reg   [8:0] sf_reg_222;
wire   [0:0] exitcond_flatten_fu_265_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1448_pp0_iter2_reg;
wire   [24:0] indvar_flatten_next1_fu_271_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_365_p3;
reg   [5:0] nm_t_mid2_reg_1457;
reg   [5:0] nm_t_mid2_reg_1457_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1457_pp0_iter2_reg;
reg   [5:0] nm_t_mid2_reg_1457_pp0_iter3_reg;
wire   [6:0] nm_mid2_fu_373_p3;
wire   [13:0] tmp_207_fu_385_p2;
reg   [13:0] tmp_207_reg_1470;
wire   [0:0] tmp_227_fu_391_p2;
reg   [0:0] tmp_227_reg_1475_pp0_iter1_reg;
reg   [0:0] tmp_227_reg_1475_pp0_iter2_reg;
wire   [8:0] sf_2_fu_397_p2;
wire   [15:0] indvar_flatten_next_fu_409_p3;
reg   [7:0] tmp_V_reg_1509;
reg   [4:0] weights11_m_weights_5_reg_1514;
reg   [4:0] weights11_m_weights_7_reg_1519;
reg   [4:0] weights11_m_weights_9_reg_1524;
reg   [4:0] weights11_m_weights_11_reg_1529;
wire   [6:0] tmp1_fu_510_p2;
reg   [6:0] tmp1_reg_1534;
wire   [6:0] tmp2_fu_599_p2;
reg   [6:0] tmp2_reg_1539;
wire   [6:0] tmp3_fu_688_p2;
reg   [6:0] tmp3_reg_1544;
wire   [6:0] tmp4_fu_777_p2;
reg   [6:0] tmp4_reg_1549;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_208_fu_417_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_7_fu_108;
wire   [7:0] macRegisters_0_V_fu_798_p2;
reg   [7:0] macRegisters_1_V_7_fu_112;
wire   [7:0] macRegisters_1_V_fu_807_p2;
reg   [7:0] macRegisters_2_V_7_fu_116;
wire   [7:0] macRegisters_2_V_fu_816_p2;
reg   [7:0] macRegisters_3_V_7_fu_120;
wire   [7:0] macRegisters_3_V_fu_825_p2;
wire   [5:0] tmp_fu_253_p1;
wire   [0:0] exitcond_flatten2_fu_277_p2;
wire   [13:0] tmp_s_fu_257_p3;
wire   [0:0] tmp_887_fu_313_p2;
wire   [0:0] not_exitcond_flatten_fu_307_p2;
wire   [6:0] nm_mid_fu_283_p3;
wire   [0:0] tmp_237_mid_fu_319_p2;
wire   [0:0] tmp_863_fu_331_p2;
wire   [6:0] nm_2_fu_325_p2;
wire   [5:0] tmp_991_fu_345_p1;
wire   [13:0] tmp_236_mid1_fu_349_p3;
wire   [13:0] tmp_236_mid_fu_291_p3;
wire   [5:0] nm_t_mid_fu_299_p3;
wire   [8:0] sf_mid2_fu_337_p3;
wire   [13:0] tmp_236_mid2_fu_357_p3;
wire   [13:0] sf_cast1_fu_381_p1;
wire   [15:0] indvar_flatten_op_fu_403_p2;
wire  signed [7:0] p_Val2_s_fu_430_p0;
wire  signed [12:0] p_08_cast_cast_fu_424_p1;
wire  signed [4:0] p_Val2_s_fu_430_p1;
wire   [12:0] p_Val2_s_fu_430_p2;
wire   [5:0] tmp_993_fu_444_p4;
wire   [0:0] tmp_995_fu_466_p1;
wire   [0:0] tmp_992_fu_436_p3;
wire   [4:0] tmp_211_fu_476_p4;
wire   [0:0] tmp_210_fu_470_p2;
wire   [5:0] tmp_212_fu_486_p3;
wire   [0:0] tmp_213_fu_494_p2;
wire   [0:0] tmp_994_fu_458_p3;
wire   [0:0] qb_assign_2_fu_500_p2;
wire  signed [6:0] p_Val2_cast_fu_454_p1;
wire   [6:0] tmp_214_cast_fu_506_p1;
wire  signed [7:0] p_Val2_1_fu_519_p0;
wire  signed [4:0] p_Val2_1_fu_519_p1;
wire   [12:0] p_Val2_1_fu_519_p2;
wire   [5:0] tmp_997_fu_533_p4;
wire   [0:0] tmp_999_fu_555_p1;
wire   [0:0] tmp_996_fu_525_p3;
wire   [4:0] tmp_217_fu_565_p4;
wire   [0:0] tmp_216_fu_559_p2;
wire   [5:0] tmp_218_fu_575_p3;
wire   [0:0] tmp_279_1_fu_583_p2;
wire   [0:0] tmp_998_fu_547_p3;
wire   [0:0] qb_assign_2_1_fu_589_p2;
wire  signed [6:0] p_Val2_93_1_cast_fu_543_p1;
wire   [6:0] tmp_280_1_cast_fu_595_p1;
wire  signed [7:0] p_Val2_2_fu_608_p0;
wire  signed [4:0] p_Val2_2_fu_608_p1;
wire   [12:0] p_Val2_2_fu_608_p2;
wire   [5:0] tmp_1001_fu_622_p4;
wire   [0:0] tmp_1003_fu_644_p1;
wire   [0:0] tmp_1000_fu_614_p3;
wire   [4:0] tmp_221_fu_654_p4;
wire   [0:0] tmp_220_fu_648_p2;
wire   [5:0] tmp_222_fu_664_p3;
wire   [0:0] tmp_279_2_fu_672_p2;
wire   [0:0] tmp_1002_fu_636_p3;
wire   [0:0] qb_assign_2_2_fu_678_p2;
wire  signed [6:0] p_Val2_93_2_cast_fu_632_p1;
wire   [6:0] tmp_280_2_cast_fu_684_p1;
wire  signed [7:0] p_Val2_3_fu_697_p0;
wire  signed [4:0] p_Val2_3_fu_697_p1;
wire   [12:0] p_Val2_3_fu_697_p2;
wire   [5:0] tmp_1005_fu_711_p4;
wire   [0:0] tmp_1007_fu_733_p1;
wire   [0:0] tmp_1004_fu_703_p3;
wire   [4:0] tmp_225_fu_743_p4;
wire   [0:0] tmp_224_fu_737_p2;
wire   [5:0] tmp_226_fu_753_p3;
wire   [0:0] tmp_279_3_fu_761_p2;
wire   [0:0] tmp_1006_fu_725_p3;
wire   [0:0] qb_assign_2_3_fu_767_p2;
wire  signed [6:0] p_Val2_93_3_cast_fu_721_p1;
wire   [6:0] tmp_280_3_cast_fu_773_p1;
wire  signed [7:0] tmp1_cast_fu_795_p1;
wire  signed [7:0] tmp2_cast_fu_804_p1;
wire  signed [7:0] tmp3_cast_fu_813_p1;
wire  signed [7:0] tmp4_cast_fu_822_p1;
wire   [7:0] tmp_160_fu_851_p66;
wire   [7:0] tmp_161_fu_990_p66;
wire   [7:0] tmp_162_fu_1129_p66;
wire   [7:0] tmp_163_fu_1268_p66;
wire   [7:0] p_Val2_23_3_fu_1401_p2;
wire   [7:0] p_Val2_23_2_fu_1262_p2;
wire   [7:0] p_Val2_23_1_fu_1123_p2;
wire   [7:0] p_Val2_4_fu_984_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new400_udo #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights11_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights11_m_weights_3_address0),
    .ce0(weights11_m_weights_3_ce0),
    .q0(weights11_m_weights_3_q0)
);

Conv1DMac_new400_vdy #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights11_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights11_m_weights_2_address0),
    .ce0(weights11_m_weights_2_ce0),
    .q0(weights11_m_weights_2_q0)
);

Conv1DMac_new400_wdI #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights11_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights11_m_weights_1_address0),
    .ce0(weights11_m_weights_1_ce0),
    .q0(weights11_m_weights_1_q0)
);

Conv1DMac_new400_xdS #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights11_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights11_m_weights_s_address0),
    .ce0(weights11_m_weights_s_ce0),
    .q0(weights11_m_weights_s_q0)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U41(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd254),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd255),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd1),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd255),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd1),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd1),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1457_pp0_iter3_reg),
    .dout(tmp_160_fu_851_p66)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U42(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd1),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd255),
    .din47(8'd0),
    .din48(8'd1),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1457_pp0_iter3_reg),
    .dout(tmp_161_fu_990_p66)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U43(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd255),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1457_pp0_iter3_reg),
    .dout(tmp_162_fu_1129_p66)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U44(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd1),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd1),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd1),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1457_pp0_iter3_reg),
    .dout(tmp_163_fu_1268_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten2_reg_189 <= indvar_flatten_next1_fu_271_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten2_reg_189 <= 25'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_200 <= indvar_flatten_next_fu_409_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_200 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_7_fu_108 <= macRegisters_0_V_fu_798_p2;
    end else if ((((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_0_V_7_fu_108 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_7_fu_112 <= macRegisters_1_V_fu_807_p2;
    end else if ((((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_1_V_7_fu_112 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_7_fu_116 <= macRegisters_2_V_fu_816_p2;
    end else if ((((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_2_V_7_fu_116 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_7_fu_120 <= macRegisters_3_V_fu_825_p2;
    end else if ((((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_3_V_7_fu_120 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_211 <= nm_mid2_fu_373_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_211 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_222 <= sf_2_fu_397_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_222 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_1448 <= exitcond_flatten_fu_265_p2;
        exitcond_flatten_reg_1448_pp0_iter1_reg <= exitcond_flatten_reg_1448;
        nm_t_mid2_reg_1457_pp0_iter1_reg <= nm_t_mid2_reg_1457;
        tmp_227_reg_1475_pp0_iter1_reg <= tmp_227_reg_1475;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_1448_pp0_iter2_reg <= exitcond_flatten_reg_1448_pp0_iter1_reg;
        nm_t_mid2_reg_1457_pp0_iter2_reg <= nm_t_mid2_reg_1457_pp0_iter1_reg;
        nm_t_mid2_reg_1457_pp0_iter3_reg <= nm_t_mid2_reg_1457_pp0_iter2_reg;
        tmp_227_reg_1475_pp0_iter2_reg <= tmp_227_reg_1475_pp0_iter1_reg;
        tmp_227_reg_1475_pp0_iter3_reg <= tmp_227_reg_1475_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1457 <= nm_t_mid2_fu_365_p3;
        tmp_207_reg_1470 <= tmp_207_fu_385_p2;
        tmp_227_reg_1475 <= tmp_227_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1448_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp1_reg_1534 <= tmp1_fu_510_p2;
        tmp2_reg_1539 <= tmp2_fu_599_p2;
        tmp3_reg_1544 <= tmp3_fu_688_p2;
        tmp4_reg_1549 <= tmp4_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_reg_1509 <= in_V_V_dout;
        weights11_m_weights_11_reg_1529 <= weights11_m_weights_s_q0;
        weights11_m_weights_5_reg_1514 <= weights11_m_weights_3_q0;
        weights11_m_weights_7_reg_1519 <= weights11_m_weights_2_q0;
        weights11_m_weights_9_reg_1524 <= weights11_m_weights_1_q0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_265_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights11_m_weights_1_ce0 = 1'b1;
    end else begin
        weights11_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights11_m_weights_2_ce0 = 1'b1;
    end else begin
        weights11_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights11_m_weights_3_ce0 = 1'b1;
    end else begin
        weights11_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights11_m_weights_s_ce0 = 1'b1;
    end else begin
        weights11_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_265_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond_flatten_fu_265_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten_reg_1448_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_227_reg_1475_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten2_fu_277_p2 = ((indvar_flatten_reg_200 == 16'd16384) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_265_p2 = ((indvar_flatten2_reg_189 == 25'd16777216) ? 1'b1 : 1'b0);

assign indvar_flatten_next1_fu_271_p2 = (25'd1 + indvar_flatten2_reg_189);

assign indvar_flatten_next_fu_409_p3 = ((exitcond_flatten2_fu_277_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_403_p2);

assign indvar_flatten_op_fu_403_p2 = (indvar_flatten_reg_200 + 16'd1);

assign macRegisters_0_V_fu_798_p2 = ($signed(tmp1_cast_fu_795_p1) + $signed(macRegisters_0_V_7_fu_108));

assign macRegisters_1_V_fu_807_p2 = ($signed(tmp2_cast_fu_804_p1) + $signed(macRegisters_1_V_7_fu_112));

assign macRegisters_2_V_fu_816_p2 = ($signed(tmp3_cast_fu_813_p1) + $signed(macRegisters_2_V_7_fu_116));

assign macRegisters_3_V_fu_825_p2 = ($signed(tmp4_cast_fu_822_p1) + $signed(macRegisters_3_V_7_fu_120));

assign nm_2_fu_325_p2 = (7'd1 + nm_mid_fu_283_p3);

assign nm_mid2_fu_373_p3 = ((tmp_237_mid_fu_319_p2[0:0] === 1'b1) ? nm_2_fu_325_p2 : nm_mid_fu_283_p3);

assign nm_mid_fu_283_p3 = ((exitcond_flatten2_fu_277_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_211);

assign nm_t_mid2_fu_365_p3 = ((tmp_237_mid_fu_319_p2[0:0] === 1'b1) ? tmp_991_fu_345_p1 : nm_t_mid_fu_299_p3);

assign nm_t_mid_fu_299_p3 = ((exitcond_flatten2_fu_277_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_253_p1);

assign not_exitcond_flatten_fu_307_p2 = (exitcond_flatten2_fu_277_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_23_3_fu_1401_p2}, {p_Val2_23_2_fu_1262_p2}}, {p_Val2_23_1_fu_1123_p2}}, {p_Val2_4_fu_984_p2}};

assign p_08_cast_cast_fu_424_p1 = $signed(tmp_V_reg_1509);

assign p_Val2_1_fu_519_p0 = p_08_cast_cast_fu_424_p1;

assign p_Val2_1_fu_519_p1 = weights11_m_weights_7_reg_1519;

assign p_Val2_1_fu_519_p2 = ($signed(p_Val2_1_fu_519_p0) * $signed(p_Val2_1_fu_519_p1));

assign p_Val2_23_1_fu_1123_p2 = (macRegisters_1_V_fu_807_p2 + tmp_161_fu_990_p66);

assign p_Val2_23_2_fu_1262_p2 = (macRegisters_2_V_fu_816_p2 + tmp_162_fu_1129_p66);

assign p_Val2_23_3_fu_1401_p2 = (macRegisters_3_V_fu_825_p2 + tmp_163_fu_1268_p66);

assign p_Val2_2_fu_608_p0 = p_08_cast_cast_fu_424_p1;

assign p_Val2_2_fu_608_p1 = weights11_m_weights_9_reg_1524;

assign p_Val2_2_fu_608_p2 = ($signed(p_Val2_2_fu_608_p0) * $signed(p_Val2_2_fu_608_p1));

assign p_Val2_3_fu_697_p0 = p_08_cast_cast_fu_424_p1;

assign p_Val2_3_fu_697_p1 = weights11_m_weights_11_reg_1529;

assign p_Val2_3_fu_697_p2 = ($signed(p_Val2_3_fu_697_p0) * $signed(p_Val2_3_fu_697_p1));

assign p_Val2_4_fu_984_p2 = (macRegisters_0_V_fu_798_p2 + tmp_160_fu_851_p66);

assign p_Val2_93_1_cast_fu_543_p1 = $signed(tmp_997_fu_533_p4);

assign p_Val2_93_2_cast_fu_632_p1 = $signed(tmp_1001_fu_622_p4);

assign p_Val2_93_3_cast_fu_721_p1 = $signed(tmp_1005_fu_711_p4);

assign p_Val2_cast_fu_454_p1 = $signed(tmp_993_fu_444_p4);

assign p_Val2_s_fu_430_p0 = p_08_cast_cast_fu_424_p1;

assign p_Val2_s_fu_430_p1 = weights11_m_weights_5_reg_1514;

assign p_Val2_s_fu_430_p2 = ($signed(p_Val2_s_fu_430_p0) * $signed(p_Val2_s_fu_430_p1));

assign qb_assign_2_1_fu_589_p2 = (tmp_998_fu_547_p3 & tmp_279_1_fu_583_p2);

assign qb_assign_2_2_fu_678_p2 = (tmp_279_2_fu_672_p2 & tmp_1002_fu_636_p3);

assign qb_assign_2_3_fu_767_p2 = (tmp_279_3_fu_761_p2 & tmp_1006_fu_725_p3);

assign qb_assign_2_fu_500_p2 = (tmp_994_fu_458_p3 & tmp_213_fu_494_p2);

assign sf_2_fu_397_p2 = (sf_mid2_fu_337_p3 + 9'd1);

assign sf_cast1_fu_381_p1 = sf_mid2_fu_337_p3;

assign sf_mid2_fu_337_p3 = ((tmp_863_fu_331_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_222);

assign start_out = real_start;

assign tmp1_cast_fu_795_p1 = $signed(tmp1_reg_1534);

assign tmp1_fu_510_p2 = ($signed(p_Val2_cast_fu_454_p1) + $signed(tmp_214_cast_fu_506_p1));

assign tmp2_cast_fu_804_p1 = $signed(tmp2_reg_1539);

assign tmp2_fu_599_p2 = ($signed(p_Val2_93_1_cast_fu_543_p1) + $signed(tmp_280_1_cast_fu_595_p1));

assign tmp3_cast_fu_813_p1 = $signed(tmp3_reg_1544);

assign tmp3_fu_688_p2 = ($signed(p_Val2_93_2_cast_fu_632_p1) + $signed(tmp_280_2_cast_fu_684_p1));

assign tmp4_cast_fu_822_p1 = $signed(tmp4_reg_1549);

assign tmp4_fu_777_p2 = ($signed(p_Val2_93_3_cast_fu_721_p1) + $signed(tmp_280_3_cast_fu_773_p1));

assign tmp_1000_fu_614_p3 = p_Val2_2_fu_608_p2[32'd12];

assign tmp_1001_fu_622_p4 = {{p_Val2_2_fu_608_p2[12:7]}};

assign tmp_1002_fu_636_p3 = p_Val2_2_fu_608_p2[32'd6];

assign tmp_1003_fu_644_p1 = p_Val2_2_fu_608_p2[0:0];

assign tmp_1004_fu_703_p3 = p_Val2_3_fu_697_p2[32'd12];

assign tmp_1005_fu_711_p4 = {{p_Val2_3_fu_697_p2[12:7]}};

assign tmp_1006_fu_725_p3 = p_Val2_3_fu_697_p2[32'd6];

assign tmp_1007_fu_733_p1 = p_Val2_3_fu_697_p2[0:0];

assign tmp_207_fu_385_p2 = (tmp_236_mid2_fu_357_p3 + sf_cast1_fu_381_p1);

assign tmp_208_fu_417_p1 = tmp_207_reg_1470;

assign tmp_210_fu_470_p2 = (tmp_995_fu_466_p1 | tmp_992_fu_436_p3);

assign tmp_211_fu_476_p4 = {{p_Val2_s_fu_430_p2[5:1]}};

assign tmp_212_fu_486_p3 = {{tmp_211_fu_476_p4}, {tmp_210_fu_470_p2}};

assign tmp_213_fu_494_p2 = ((tmp_212_fu_486_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_214_cast_fu_506_p1 = qb_assign_2_fu_500_p2;

assign tmp_216_fu_559_p2 = (tmp_999_fu_555_p1 | tmp_996_fu_525_p3);

assign tmp_217_fu_565_p4 = {{p_Val2_1_fu_519_p2[5:1]}};

assign tmp_218_fu_575_p3 = {{tmp_217_fu_565_p4}, {tmp_216_fu_559_p2}};

assign tmp_220_fu_648_p2 = (tmp_1003_fu_644_p1 | tmp_1000_fu_614_p3);

assign tmp_221_fu_654_p4 = {{p_Val2_2_fu_608_p2[5:1]}};

assign tmp_222_fu_664_p3 = {{tmp_221_fu_654_p4}, {tmp_220_fu_648_p2}};

assign tmp_224_fu_737_p2 = (tmp_1007_fu_733_p1 | tmp_1004_fu_703_p3);

assign tmp_225_fu_743_p4 = {{p_Val2_3_fu_697_p2[5:1]}};

assign tmp_226_fu_753_p3 = {{tmp_225_fu_743_p4}, {tmp_224_fu_737_p2}};

assign tmp_227_fu_391_p2 = ((sf_mid2_fu_337_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_236_mid1_fu_349_p3 = {{tmp_991_fu_345_p1}, {8'd0}};

assign tmp_236_mid2_fu_357_p3 = ((tmp_237_mid_fu_319_p2[0:0] === 1'b1) ? tmp_236_mid1_fu_349_p3 : tmp_236_mid_fu_291_p3);

assign tmp_236_mid_fu_291_p3 = ((exitcond_flatten2_fu_277_p2[0:0] === 1'b1) ? 14'd0 : tmp_s_fu_257_p3);

assign tmp_237_mid_fu_319_p2 = (tmp_887_fu_313_p2 & not_exitcond_flatten_fu_307_p2);

assign tmp_279_1_fu_583_p2 = ((tmp_218_fu_575_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_279_2_fu_672_p2 = ((tmp_222_fu_664_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_279_3_fu_761_p2 = ((tmp_226_fu_753_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_280_1_cast_fu_595_p1 = qb_assign_2_1_fu_589_p2;

assign tmp_280_2_cast_fu_684_p1 = qb_assign_2_2_fu_678_p2;

assign tmp_280_3_cast_fu_773_p1 = qb_assign_2_3_fu_767_p2;

assign tmp_863_fu_331_p2 = (tmp_237_mid_fu_319_p2 | exitcond_flatten2_fu_277_p2);

assign tmp_887_fu_313_p2 = ((sf_reg_222 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_991_fu_345_p1 = nm_2_fu_325_p2[5:0];

assign tmp_992_fu_436_p3 = p_Val2_s_fu_430_p2[32'd12];

assign tmp_993_fu_444_p4 = {{p_Val2_s_fu_430_p2[12:7]}};

assign tmp_994_fu_458_p3 = p_Val2_s_fu_430_p2[32'd6];

assign tmp_995_fu_466_p1 = p_Val2_s_fu_430_p2[0:0];

assign tmp_996_fu_525_p3 = p_Val2_1_fu_519_p2[32'd12];

assign tmp_997_fu_533_p4 = {{p_Val2_1_fu_519_p2[12:7]}};

assign tmp_998_fu_547_p3 = p_Val2_1_fu_519_p2[32'd6];

assign tmp_999_fu_555_p1 = p_Val2_1_fu_519_p2[0:0];

assign tmp_fu_253_p1 = nm_reg_211[5:0];

assign tmp_s_fu_257_p3 = {{tmp_fu_253_p1}, {8'd0}};

assign weights11_m_weights_1_address0 = tmp_208_fu_417_p1;

assign weights11_m_weights_2_address0 = tmp_208_fu_417_p1;

assign weights11_m_weights_3_address0 = tmp_208_fu_417_p1;

assign weights11_m_weights_s_address0 = tmp_208_fu_417_p1;

endmodule //Conv1DMac_new400

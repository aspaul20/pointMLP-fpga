-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity loadPCL_pcl_V_8450_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 96
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of loadPCL_pcl_V_8450_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00010110", 1 => "10010101", 2 => "11011111", 3 => "00000111", 
    4 => "11001101", 5 => "11110101", 6 => "00010110", 7 => "00010101", 
    8 => "00010111", 9 => "11111001", 10 => "00011000", 11 => "00010001", 
    12 => "00100000", 13 => "10001110", 14 => "11100011", 15 => "00101010", 
    16 => "00101100", 17 => "00011010", 18 => "00110000", 19 => "11110011", 
    20 => "00101010", 21 => "00010111", 22 => "11010101", 23 => "00010110", 
    24 => "00010000", 25 => "11001100", 26 => "00101001", 27 => "00101100", 
    28 => "00000111", 29 => "00101110", 30 => "00000110", 31 => "11111100", 
    32 => "00011100", 33 => "11110111", 34 => "11011010", 35 => "00101000", 
    36 => "00011110", 37 => "11111100", 38 to 39=> "00011101", 40 => "01011001", 
    41 => "00101100", 42 => "00100101", 43 => "10110101", 44 => "11110110", 
    45 => "00001001", 46 => "10101101", 47 => "11101100", 48 => "00010010", 
    49 => "11111001", 50 => "00011000", 51 => "00001011", 52 => "11011000", 
    53 => "00001011", 54 => "11111110", 55 => "11110001", 56 => "00110100", 
    57 => "00110111", 58 => "01000001", 59 to 60=> "00101100", 61 => "01001010", 
    62 => "00100111", 63 => "01000011", 64 => "00100010", 65 => "00101010", 
    66 => "11111110", 67 => "00000101", 68 => "00010101", 69 => "00001001", 
    70 => "01010111", 71 => "00101000", 72 => "11110011", 73 => "01000101", 
    74 => "00100111", 75 => "00001111", 76 => "11010100", 77 => "00100011", 
    78 => "00100010", 79 => "11110000", 80 => "00110101", 81 => "00011010", 
    82 => "11001101", 83 to 84=> "00000110", 85 => "01100100", 86 => "01010101", 
    87 => "11111111", 88 => "00001101", 89 => "00011010", 90 => "11111111", 
    91 => "10010001", 92 => "11100101", 93 => "00101110", 94 => "11101110", 
    95 => "00001100" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity loadPCL_pcl_V_8450 is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 96;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of loadPCL_pcl_V_8450 is
    component loadPCL_pcl_V_8450_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    loadPCL_pcl_V_8450_rom_U :  component loadPCL_pcl_V_8450_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;



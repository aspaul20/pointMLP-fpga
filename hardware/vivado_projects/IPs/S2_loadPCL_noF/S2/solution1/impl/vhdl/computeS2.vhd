-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeS2 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    input1_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s2_out_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    input1_V_V_TVALID : IN STD_LOGIC;
    input1_V_V_TREADY : OUT STD_LOGIC;
    s2_out_V_V_TVALID : OUT STD_LOGIC;
    s2_out_V_V_TREADY : IN STD_LOGIC );
end;


architecture behav of computeS2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "computeS2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.198500,HLS_SYN_LAT=25442976,HLS_SYN_TPT=8388741,HLS_SYN_MEM=124,HLS_SYN_DSP=0,HLS_SYN_FF=6465,HLS_SYN_LUT=20984,HLS_VERSION=2018_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal loadPCL_U0_ap_start : STD_LOGIC;
    signal loadPCL_U0_ap_done : STD_LOGIC;
    signal loadPCL_U0_ap_continue : STD_LOGIC;
    signal loadPCL_U0_ap_idle : STD_LOGIC;
    signal loadPCL_U0_ap_ready : STD_LOGIC;
    signal loadPCL_U0_PCL_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal loadPCL_U0_PCL_V_V_write : STD_LOGIC;
    signal ResizeStream_1_U0_ap_start : STD_LOGIC;
    signal ResizeStream_1_U0_ap_done : STD_LOGIC;
    signal ResizeStream_1_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_1_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_1_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_1_U0_start_out : STD_LOGIC;
    signal ResizeStream_1_U0_start_write : STD_LOGIC;
    signal ResizeStream_1_U0_in_V_V_TREADY : STD_LOGIC;
    signal ResizeStream_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal ResizeStream_1_U0_out_V_V_write : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_start : STD_LOGIC := '0';
    signal CloneStreamOnce_U0_ap_done : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_continue : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_idle : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_ready : STD_LOGIC;
    signal CloneStreamOnce_U0_IN_V_V_read : STD_LOGIC;
    signal CloneStreamOnce_U0_out1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CloneStreamOnce_U0_out1_V_V_write : STD_LOGIC;
    signal grouperPE_U0_ap_start : STD_LOGIC;
    signal grouperPE_U0_ap_done : STD_LOGIC;
    signal grouperPE_U0_ap_continue : STD_LOGIC;
    signal grouperPE_U0_ap_idle : STD_LOGIC;
    signal grouperPE_U0_ap_ready : STD_LOGIC;
    signal grouperPE_U0_start_out : STD_LOGIC;
    signal grouperPE_U0_start_write : STD_LOGIC;
    signal grouperPE_U0_inStream_V_V_read : STD_LOGIC;
    signal grouperPE_U0_features_V_V_read : STD_LOGIC;
    signal grouperPE_U0_outStream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grouperPE_U0_outStream_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new397_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new397_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new398_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new398_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new398_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new398_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new398_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new398_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new398_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new398_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new398_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new398_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D399_U0_ap_start : STD_LOGIC;
    signal Relu1D399_U0_ap_done : STD_LOGIC;
    signal Relu1D399_U0_ap_continue : STD_LOGIC;
    signal Relu1D399_U0_ap_idle : STD_LOGIC;
    signal Relu1D399_U0_ap_ready : STD_LOGIC;
    signal Relu1D399_U0_start_out : STD_LOGIC;
    signal Relu1D399_U0_start_write : STD_LOGIC;
    signal Relu1D399_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D399_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D399_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_1_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new401_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new401_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new402_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new402_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new402_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new402_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new402_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new402_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new402_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new402_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new402_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new402_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D403_U0_ap_start : STD_LOGIC;
    signal Relu1D403_U0_ap_done : STD_LOGIC;
    signal Relu1D403_U0_ap_continue : STD_LOGIC;
    signal Relu1D403_U0_ap_idle : STD_LOGIC;
    signal Relu1D403_U0_ap_ready : STD_LOGIC;
    signal Relu1D403_U0_start_out : STD_LOGIC;
    signal Relu1D403_U0_start_write : STD_LOGIC;
    signal Relu1D403_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D403_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D403_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_U0_ap_start : STD_LOGIC;
    signal Relu1D_U0_ap_done : STD_LOGIC;
    signal Relu1D_U0_ap_continue : STD_LOGIC;
    signal Relu1D_U0_ap_idle : STD_LOGIC;
    signal Relu1D_U0_ap_ready : STD_LOGIC;
    signal Relu1D_U0_start_out : STD_LOGIC;
    signal Relu1D_U0_start_write : STD_LOGIC;
    signal Relu1D_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_2_U0_out_V_V_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_start : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_done : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_continue : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_idle : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_ready : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_out : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_in_V_V_read : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingMaxPool_Pre_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new405_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new405_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new406_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new406_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new406_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new406_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new406_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new406_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new406_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new406_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new406_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new406_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D407_U0_ap_start : STD_LOGIC;
    signal Relu1D407_U0_ap_done : STD_LOGIC;
    signal Relu1D407_U0_ap_continue : STD_LOGIC;
    signal Relu1D407_U0_ap_idle : STD_LOGIC;
    signal Relu1D407_U0_ap_ready : STD_LOGIC;
    signal Relu1D407_U0_start_out : STD_LOGIC;
    signal Relu1D407_U0_start_write : STD_LOGIC;
    signal Relu1D407_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D407_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D407_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_3_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_1_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_1_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_1_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_1_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_1_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_1_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_1_U0_ap_start : STD_LOGIC;
    signal Relu1D_1_U0_ap_done : STD_LOGIC;
    signal Relu1D_1_U0_ap_continue : STD_LOGIC;
    signal Relu1D_1_U0_ap_idle : STD_LOGIC;
    signal Relu1D_1_U0_ap_ready : STD_LOGIC;
    signal Relu1D_1_U0_start_out : STD_LOGIC;
    signal Relu1D_1_U0_start_write : STD_LOGIC;
    signal Relu1D_1_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_1_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_1_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_4_U0_out_V_V_write : STD_LOGIC;
    signal ResizeStream_U0_ap_start : STD_LOGIC;
    signal ResizeStream_U0_ap_done : STD_LOGIC;
    signal ResizeStream_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_U0_in_V_V_read : STD_LOGIC;
    signal ResizeStream_U0_out_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal ResizeStream_U0_out_V_V_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal inStr_V_V_full_n : STD_LOGIC;
    signal inStr_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inStr_V_V_empty_n : STD_LOGIC;
    signal cnv_26_V_V_full_n : STD_LOGIC;
    signal cnv_26_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_26_V_V_empty_n : STD_LOGIC;
    signal in_1_V_V_full_n : STD_LOGIC;
    signal in_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_1_V_V_empty_n : STD_LOGIC;
    signal cnv_27_V_V_full_n : STD_LOGIC;
    signal cnv_27_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_27_V_V_empty_n : STD_LOGIC;
    signal cnv_28_V_V_full_n : STD_LOGIC;
    signal cnv_28_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_28_V_V_empty_n : STD_LOGIC;
    signal cnv_29PRL_V_V_full_n : STD_LOGIC;
    signal cnv_29PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_29PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_30PRL_V_V_full_n : STD_LOGIC;
    signal cnv_30PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_30PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_31_V_V_full_n : STD_LOGIC;
    signal cnv_31_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_31_V_V_empty_n : STD_LOGIC;
    signal cnv_32_V_V_full_n : STD_LOGIC;
    signal cnv_32_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_32_V_V_empty_n : STD_LOGIC;
    signal cnv_33PRL_V_V_full_n : STD_LOGIC;
    signal cnv_33PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_33PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_34PRL_V_V_full_n : STD_LOGIC;
    signal cnv_34PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_34PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_35_V_V_full_n : STD_LOGIC;
    signal cnv_35_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_35_V_V_empty_n : STD_LOGIC;
    signal cnv_36_V_V_full_n : STD_LOGIC;
    signal cnv_36_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_36_V_V_empty_n : STD_LOGIC;
    signal cnv_37PRL_V_V_full_n : STD_LOGIC;
    signal cnv_37PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_37PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_38PRL_V_V_full_n : STD_LOGIC;
    signal cnv_38PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_38PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_39_V_V_full_n : STD_LOGIC;
    signal cnv_39_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_39_V_V_empty_n : STD_LOGIC;
    signal cnv_40_V_V_full_n : STD_LOGIC;
    signal cnv_40_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_40_V_V_empty_n : STD_LOGIC;
    signal cnv_41_V_V_full_n : STD_LOGIC;
    signal cnv_41_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_41_V_V_empty_n : STD_LOGIC;
    signal cnv_42PRL_V_V_full_n : STD_LOGIC;
    signal cnv_42PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_42PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_43PRL_V_V_full_n : STD_LOGIC;
    signal cnv_43PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_43PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_44_V_V_full_n : STD_LOGIC;
    signal cnv_44_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_44_V_V_empty_n : STD_LOGIC;
    signal cnv_45_V_V_full_n : STD_LOGIC;
    signal cnv_45_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_45_V_V_empty_n : STD_LOGIC;
    signal cnv_46PRL_V_V_full_n : STD_LOGIC;
    signal cnv_46PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_46PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_47PRL_V_V_full_n : STD_LOGIC;
    signal cnv_47PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_47PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_48_V_V_full_n : STD_LOGIC;
    signal cnv_48_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_48_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal loadPCL_U0_start_full_n : STD_LOGIC;
    signal loadPCL_U0_start_write : STD_LOGIC;
    signal start_for_grouperPE_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_grouperPE_U0_full_n : STD_LOGIC;
    signal start_for_grouperPE_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_grouperPE_U0_empty_n : STD_LOGIC;
    signal CloneStreamOnce_U0_start_full_n : STD_LOGIC;
    signal CloneStreamOnce_U0_start_write : STD_LOGIC;
    signal start_for_Conv1DBuffer_new397_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new397_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new397_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new397_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new398_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new398_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new398_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new398_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D399_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D399_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D399_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D399_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new401_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new401_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new401_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new401_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new402_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new402_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new402_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new402_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D403_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D403_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D403_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D403_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_2_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_2_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_full_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new405_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new405_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new405_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new405_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new406_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new406_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new406_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new406_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D407_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D407_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D407_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D407_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_3_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_3_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_1_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_1_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_1_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_1_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_1_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_1_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_4_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_4_U0_empty_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_full_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_empty_n : STD_LOGIC;
    signal ResizeStream_U0_start_full_n : STD_LOGIC;
    signal ResizeStream_U0_start_write : STD_LOGIC;

    component loadPCL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        PCL_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        PCL_V_V_full_n : IN STD_LOGIC;
        PCL_V_V_write : OUT STD_LOGIC );
    end component;


    component ResizeStream_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_TVALID : IN STD_LOGIC;
        in_V_V_TREADY : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component CloneStreamOnce IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_V_V_empty_n : IN STD_LOGIC;
        IN_V_V_read : OUT STD_LOGIC;
        out1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out1_V_V_full_n : IN STD_LOGIC;
        out1_V_V_write : OUT STD_LOGIC );
    end component;


    component grouperPE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        inStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        inStream_V_V_empty_n : IN STD_LOGIC;
        inStream_V_V_read : OUT STD_LOGIC;
        features_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        features_V_V_empty_n : IN STD_LOGIC;
        features_V_V_read : OUT STD_LOGIC;
        outStream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream_V_V_full_n : IN STD_LOGIC;
        outStream_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new397 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new398 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D399 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new401 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new402 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D403 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingMaxPool_Pre IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new405 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new406 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D407 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component ResizeStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_TVALID : OUT STD_LOGIC;
        out_V_V_TREADY : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_grouperUhA IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBVhK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMWhU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D3Xh4 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_StreamiYie IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBZio IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DM0iy IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D41iI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streami2iS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DB3i2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DM4jc IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streami5jm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streami6jw IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DB7jG IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DM8jQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D49j0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibak IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBbbk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMbck IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_bdk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibek IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_ResizeSbfk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component computeS2_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    computeS2_control_s_axi_U : component computeS2_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    loadPCL_U0 : component loadPCL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => loadPCL_U0_ap_start,
        ap_done => loadPCL_U0_ap_done,
        ap_continue => loadPCL_U0_ap_continue,
        ap_idle => loadPCL_U0_ap_idle,
        ap_ready => loadPCL_U0_ap_ready,
        PCL_V_V_din => loadPCL_U0_PCL_V_V_din,
        PCL_V_V_full_n => inStr_V_V_full_n,
        PCL_V_V_write => loadPCL_U0_PCL_V_V_write);

    ResizeStream_1_U0 : component ResizeStream_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_1_U0_ap_start,
        start_full_n => start_for_grouperPE_U0_full_n,
        ap_done => ResizeStream_1_U0_ap_done,
        ap_continue => ResizeStream_1_U0_ap_continue,
        ap_idle => ResizeStream_1_U0_ap_idle,
        ap_ready => ResizeStream_1_U0_ap_ready,
        start_out => ResizeStream_1_U0_start_out,
        start_write => ResizeStream_1_U0_start_write,
        in_V_V_TDATA => input1_V_V_TDATA,
        in_V_V_TVALID => input1_V_V_TVALID,
        in_V_V_TREADY => ResizeStream_1_U0_in_V_V_TREADY,
        out_V_V_din => ResizeStream_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_26_V_V_full_n,
        out_V_V_write => ResizeStream_1_U0_out_V_V_write);

    CloneStreamOnce_U0 : component CloneStreamOnce
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CloneStreamOnce_U0_ap_start,
        ap_done => CloneStreamOnce_U0_ap_done,
        ap_continue => CloneStreamOnce_U0_ap_continue,
        ap_idle => CloneStreamOnce_U0_ap_idle,
        ap_ready => CloneStreamOnce_U0_ap_ready,
        IN_V_V_dout => inStr_V_V_dout,
        IN_V_V_empty_n => inStr_V_V_empty_n,
        IN_V_V_read => CloneStreamOnce_U0_IN_V_V_read,
        out1_V_V_din => CloneStreamOnce_U0_out1_V_V_din,
        out1_V_V_full_n => in_1_V_V_full_n,
        out1_V_V_write => CloneStreamOnce_U0_out1_V_V_write);

    grouperPE_U0 : component grouperPE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grouperPE_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new397_U0_full_n,
        ap_done => grouperPE_U0_ap_done,
        ap_continue => grouperPE_U0_ap_continue,
        ap_idle => grouperPE_U0_ap_idle,
        ap_ready => grouperPE_U0_ap_ready,
        start_out => grouperPE_U0_start_out,
        start_write => grouperPE_U0_start_write,
        inStream_V_V_dout => in_1_V_V_dout,
        inStream_V_V_empty_n => in_1_V_V_empty_n,
        inStream_V_V_read => grouperPE_U0_inStream_V_V_read,
        features_V_V_dout => cnv_26_V_V_dout,
        features_V_V_empty_n => cnv_26_V_V_empty_n,
        features_V_V_read => grouperPE_U0_features_V_V_read,
        outStream_V_V_din => grouperPE_U0_outStream_V_V_din,
        outStream_V_V_full_n => cnv_27_V_V_full_n,
        outStream_V_V_write => grouperPE_U0_outStream_V_V_write);

    Conv1DBuffer_new397_U0 : component Conv1DBuffer_new397
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new397_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new398_U0_full_n,
        ap_done => Conv1DBuffer_new397_U0_ap_done,
        ap_continue => Conv1DBuffer_new397_U0_ap_continue,
        ap_idle => Conv1DBuffer_new397_U0_ap_idle,
        ap_ready => Conv1DBuffer_new397_U0_ap_ready,
        start_out => Conv1DBuffer_new397_U0_start_out,
        start_write => Conv1DBuffer_new397_U0_start_write,
        in_V_V_dout => cnv_27_V_V_dout,
        in_V_V_empty_n => cnv_27_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new397_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new397_U0_out_V_V_din,
        out_V_V_full_n => cnv_28_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new397_U0_out_V_V_write);

    Conv1DMac_new398_U0 : component Conv1DMac_new398
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new398_U0_ap_start,
        start_full_n => start_for_Relu1D399_U0_full_n,
        ap_done => Conv1DMac_new398_U0_ap_done,
        ap_continue => Conv1DMac_new398_U0_ap_continue,
        ap_idle => Conv1DMac_new398_U0_ap_idle,
        ap_ready => Conv1DMac_new398_U0_ap_ready,
        start_out => Conv1DMac_new398_U0_start_out,
        start_write => Conv1DMac_new398_U0_start_write,
        in_V_V_dout => cnv_28_V_V_dout,
        in_V_V_empty_n => cnv_28_V_V_empty_n,
        in_V_V_read => Conv1DMac_new398_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new398_U0_out_V_V_din,
        out_V_V_full_n => cnv_29PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new398_U0_out_V_V_write);

    Relu1D399_U0 : component Relu1D399
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D399_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        ap_done => Relu1D399_U0_ap_done,
        ap_continue => Relu1D399_U0_ap_continue,
        ap_idle => Relu1D399_U0_ap_idle,
        ap_ready => Relu1D399_U0_ap_ready,
        start_out => Relu1D399_U0_start_out,
        start_write => Relu1D399_U0_start_write,
        in_V_V_dout => cnv_29PRL_V_V_dout,
        in_V_V_empty_n => cnv_29PRL_V_V_empty_n,
        in_V_V_read => Relu1D399_U0_in_V_V_read,
        out_V_V_din => Relu1D399_U0_out_V_V_din,
        out_V_V_full_n => cnv_30PRL_V_V_full_n,
        out_V_V_write => Relu1D399_U0_out_V_V_write);

    StreamingDataWidthCo_1_U0 : component StreamingDataWidthCo_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_1_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new401_U0_full_n,
        ap_done => StreamingDataWidthCo_1_U0_ap_done,
        ap_continue => StreamingDataWidthCo_1_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_1_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_1_U0_ap_ready,
        start_out => StreamingDataWidthCo_1_U0_start_out,
        start_write => StreamingDataWidthCo_1_U0_start_write,
        in_V_V_dout => cnv_30PRL_V_V_dout,
        in_V_V_empty_n => cnv_30PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_1_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_31_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_1_U0_out_V_V_write);

    Conv1DBuffer_new401_U0 : component Conv1DBuffer_new401
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new401_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new402_U0_full_n,
        ap_done => Conv1DBuffer_new401_U0_ap_done,
        ap_continue => Conv1DBuffer_new401_U0_ap_continue,
        ap_idle => Conv1DBuffer_new401_U0_ap_idle,
        ap_ready => Conv1DBuffer_new401_U0_ap_ready,
        start_out => Conv1DBuffer_new401_U0_start_out,
        start_write => Conv1DBuffer_new401_U0_start_write,
        in_V_V_dout => cnv_31_V_V_dout,
        in_V_V_empty_n => cnv_31_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new401_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new401_U0_out_V_V_din,
        out_V_V_full_n => cnv_32_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new401_U0_out_V_V_write);

    Conv1DMac_new402_U0 : component Conv1DMac_new402
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new402_U0_ap_start,
        start_full_n => start_for_Relu1D403_U0_full_n,
        ap_done => Conv1DMac_new402_U0_ap_done,
        ap_continue => Conv1DMac_new402_U0_ap_continue,
        ap_idle => Conv1DMac_new402_U0_ap_idle,
        ap_ready => Conv1DMac_new402_U0_ap_ready,
        start_out => Conv1DMac_new402_U0_start_out,
        start_write => Conv1DMac_new402_U0_start_write,
        in_V_V_dout => cnv_32_V_V_dout,
        in_V_V_empty_n => cnv_32_V_V_empty_n,
        in_V_V_read => Conv1DMac_new402_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new402_U0_out_V_V_din,
        out_V_V_full_n => cnv_33PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new402_U0_out_V_V_write);

    Relu1D403_U0 : component Relu1D403
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D403_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        ap_done => Relu1D403_U0_ap_done,
        ap_continue => Relu1D403_U0_ap_continue,
        ap_idle => Relu1D403_U0_ap_idle,
        ap_ready => Relu1D403_U0_ap_ready,
        start_out => Relu1D403_U0_start_out,
        start_write => Relu1D403_U0_start_write,
        in_V_V_dout => cnv_33PRL_V_V_dout,
        in_V_V_empty_n => cnv_33PRL_V_V_empty_n,
        in_V_V_read => Relu1D403_U0_in_V_V_read,
        out_V_V_din => Relu1D403_U0_out_V_V_din,
        out_V_V_full_n => cnv_34PRL_V_V_full_n,
        out_V_V_write => Relu1D403_U0_out_V_V_write);

    StreamingDataWidthCo_U0 : component StreamingDataWidthCo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        ap_done => StreamingDataWidthCo_U0_ap_done,
        ap_continue => StreamingDataWidthCo_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_U0_ap_ready,
        start_out => StreamingDataWidthCo_U0_start_out,
        start_write => StreamingDataWidthCo_U0_start_write,
        in_V_V_dout => cnv_34PRL_V_V_dout,
        in_V_V_empty_n => cnv_34PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_U0_out_V_V_din,
        out_V_V_full_n => cnv_35_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_U0_out_V_V_write);

    Conv1DBuffer_new_U0 : component Conv1DBuffer_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_U0_full_n,
        ap_done => Conv1DBuffer_new_U0_ap_done,
        ap_continue => Conv1DBuffer_new_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_U0_ap_ready,
        start_out => Conv1DBuffer_new_U0_start_out,
        start_write => Conv1DBuffer_new_U0_start_write,
        in_V_V_dout => cnv_35_V_V_dout,
        in_V_V_empty_n => cnv_35_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_36_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_U0_out_V_V_write);

    Conv1DMac_new_U0 : component Conv1DMac_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_U0_ap_start,
        start_full_n => start_for_Relu1D_U0_full_n,
        ap_done => Conv1DMac_new_U0_ap_done,
        ap_continue => Conv1DMac_new_U0_ap_continue,
        ap_idle => Conv1DMac_new_U0_ap_idle,
        ap_ready => Conv1DMac_new_U0_ap_ready,
        start_out => Conv1DMac_new_U0_start_out,
        start_write => Conv1DMac_new_U0_start_write,
        in_V_V_dout => cnv_36_V_V_dout,
        in_V_V_empty_n => cnv_36_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_37PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_U0_out_V_V_write);

    Relu1D_U0 : component Relu1D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_2_U0_full_n,
        ap_done => Relu1D_U0_ap_done,
        ap_continue => Relu1D_U0_ap_continue,
        ap_idle => Relu1D_U0_ap_idle,
        ap_ready => Relu1D_U0_ap_ready,
        start_out => Relu1D_U0_start_out,
        start_write => Relu1D_U0_start_write,
        in_V_V_dout => cnv_37PRL_V_V_dout,
        in_V_V_empty_n => cnv_37PRL_V_V_empty_n,
        in_V_V_read => Relu1D_U0_in_V_V_read,
        out_V_V_din => Relu1D_U0_out_V_V_din,
        out_V_V_full_n => cnv_38PRL_V_V_full_n,
        out_V_V_write => Relu1D_U0_out_V_V_write);

    StreamingDataWidthCo_2_U0 : component StreamingDataWidthCo_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_2_U0_ap_start,
        start_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        ap_done => StreamingDataWidthCo_2_U0_ap_done,
        ap_continue => StreamingDataWidthCo_2_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_2_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_2_U0_ap_ready,
        start_out => StreamingDataWidthCo_2_U0_start_out,
        start_write => StreamingDataWidthCo_2_U0_start_write,
        in_V_V_dout => cnv_38PRL_V_V_dout,
        in_V_V_empty_n => cnv_38PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_2_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_2_U0_out_V_V_din,
        out_V_V_full_n => cnv_39_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_2_U0_out_V_V_write);

    StreamingMaxPool_Pre_U0 : component StreamingMaxPool_Pre
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingMaxPool_Pre_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new405_U0_full_n,
        ap_done => StreamingMaxPool_Pre_U0_ap_done,
        ap_continue => StreamingMaxPool_Pre_U0_ap_continue,
        ap_idle => StreamingMaxPool_Pre_U0_ap_idle,
        ap_ready => StreamingMaxPool_Pre_U0_ap_ready,
        start_out => StreamingMaxPool_Pre_U0_start_out,
        start_write => StreamingMaxPool_Pre_U0_start_write,
        in_V_V_dout => cnv_39_V_V_dout,
        in_V_V_empty_n => cnv_39_V_V_empty_n,
        in_V_V_read => StreamingMaxPool_Pre_U0_in_V_V_read,
        out_V_V_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        out_V_V_full_n => cnv_40_V_V_full_n,
        out_V_V_write => StreamingMaxPool_Pre_U0_out_V_V_write);

    Conv1DBuffer_new405_U0 : component Conv1DBuffer_new405
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new405_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new406_U0_full_n,
        ap_done => Conv1DBuffer_new405_U0_ap_done,
        ap_continue => Conv1DBuffer_new405_U0_ap_continue,
        ap_idle => Conv1DBuffer_new405_U0_ap_idle,
        ap_ready => Conv1DBuffer_new405_U0_ap_ready,
        start_out => Conv1DBuffer_new405_U0_start_out,
        start_write => Conv1DBuffer_new405_U0_start_write,
        in_V_V_dout => cnv_40_V_V_dout,
        in_V_V_empty_n => cnv_40_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new405_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new405_U0_out_V_V_din,
        out_V_V_full_n => cnv_41_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new405_U0_out_V_V_write);

    Conv1DMac_new406_U0 : component Conv1DMac_new406
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new406_U0_ap_start,
        start_full_n => start_for_Relu1D407_U0_full_n,
        ap_done => Conv1DMac_new406_U0_ap_done,
        ap_continue => Conv1DMac_new406_U0_ap_continue,
        ap_idle => Conv1DMac_new406_U0_ap_idle,
        ap_ready => Conv1DMac_new406_U0_ap_ready,
        start_out => Conv1DMac_new406_U0_start_out,
        start_write => Conv1DMac_new406_U0_start_write,
        in_V_V_dout => cnv_41_V_V_dout,
        in_V_V_empty_n => cnv_41_V_V_empty_n,
        in_V_V_read => Conv1DMac_new406_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new406_U0_out_V_V_din,
        out_V_V_full_n => cnv_42PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new406_U0_out_V_V_write);

    Relu1D407_U0 : component Relu1D407
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D407_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_3_U0_full_n,
        ap_done => Relu1D407_U0_ap_done,
        ap_continue => Relu1D407_U0_ap_continue,
        ap_idle => Relu1D407_U0_ap_idle,
        ap_ready => Relu1D407_U0_ap_ready,
        start_out => Relu1D407_U0_start_out,
        start_write => Relu1D407_U0_start_write,
        in_V_V_dout => cnv_42PRL_V_V_dout,
        in_V_V_empty_n => cnv_42PRL_V_V_empty_n,
        in_V_V_read => Relu1D407_U0_in_V_V_read,
        out_V_V_din => Relu1D407_U0_out_V_V_din,
        out_V_V_full_n => cnv_43PRL_V_V_full_n,
        out_V_V_write => Relu1D407_U0_out_V_V_write);

    StreamingDataWidthCo_3_U0 : component StreamingDataWidthCo_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_3_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new_1_U0_full_n,
        ap_done => StreamingDataWidthCo_3_U0_ap_done,
        ap_continue => StreamingDataWidthCo_3_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_3_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_3_U0_ap_ready,
        start_out => StreamingDataWidthCo_3_U0_start_out,
        start_write => StreamingDataWidthCo_3_U0_start_write,
        in_V_V_dout => cnv_43PRL_V_V_dout,
        in_V_V_empty_n => cnv_43PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_3_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_3_U0_out_V_V_din,
        out_V_V_full_n => cnv_44_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_3_U0_out_V_V_write);

    Conv1DBuffer_new_1_U0 : component Conv1DBuffer_new_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_1_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_1_U0_full_n,
        ap_done => Conv1DBuffer_new_1_U0_ap_done,
        ap_continue => Conv1DBuffer_new_1_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_1_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_1_U0_ap_ready,
        start_out => Conv1DBuffer_new_1_U0_start_out,
        start_write => Conv1DBuffer_new_1_U0_start_write,
        in_V_V_dout => cnv_44_V_V_dout,
        in_V_V_empty_n => cnv_44_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_1_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_45_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_1_U0_out_V_V_write);

    Conv1DMac_new_1_U0 : component Conv1DMac_new_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_1_U0_ap_start,
        start_full_n => start_for_Relu1D_1_U0_full_n,
        ap_done => Conv1DMac_new_1_U0_ap_done,
        ap_continue => Conv1DMac_new_1_U0_ap_continue,
        ap_idle => Conv1DMac_new_1_U0_ap_idle,
        ap_ready => Conv1DMac_new_1_U0_ap_ready,
        start_out => Conv1DMac_new_1_U0_start_out,
        start_write => Conv1DMac_new_1_U0_start_write,
        in_V_V_dout => cnv_45_V_V_dout,
        in_V_V_empty_n => cnv_45_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_1_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_46PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_1_U0_out_V_V_write);

    Relu1D_1_U0 : component Relu1D_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_1_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_4_U0_full_n,
        ap_done => Relu1D_1_U0_ap_done,
        ap_continue => Relu1D_1_U0_ap_continue,
        ap_idle => Relu1D_1_U0_ap_idle,
        ap_ready => Relu1D_1_U0_ap_ready,
        start_out => Relu1D_1_U0_start_out,
        start_write => Relu1D_1_U0_start_write,
        in_V_V_dout => cnv_46PRL_V_V_dout,
        in_V_V_empty_n => cnv_46PRL_V_V_empty_n,
        in_V_V_read => Relu1D_1_U0_in_V_V_read,
        out_V_V_din => Relu1D_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_47PRL_V_V_full_n,
        out_V_V_write => Relu1D_1_U0_out_V_V_write);

    StreamingDataWidthCo_4_U0 : component StreamingDataWidthCo_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_4_U0_ap_start,
        start_full_n => start_for_ResizeStream_U0_full_n,
        ap_done => StreamingDataWidthCo_4_U0_ap_done,
        ap_continue => StreamingDataWidthCo_4_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_4_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_4_U0_ap_ready,
        start_out => StreamingDataWidthCo_4_U0_start_out,
        start_write => StreamingDataWidthCo_4_U0_start_write,
        in_V_V_dout => cnv_47PRL_V_V_dout,
        in_V_V_empty_n => cnv_47PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_4_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_4_U0_out_V_V_din,
        out_V_V_full_n => cnv_48_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_4_U0_out_V_V_write);

    ResizeStream_U0 : component ResizeStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_U0_ap_start,
        ap_done => ResizeStream_U0_ap_done,
        ap_continue => ResizeStream_U0_ap_continue,
        ap_idle => ResizeStream_U0_ap_idle,
        ap_ready => ResizeStream_U0_ap_ready,
        in_V_V_dout => cnv_48_V_V_dout,
        in_V_V_empty_n => cnv_48_V_V_empty_n,
        in_V_V_read => ResizeStream_U0_in_V_V_read,
        out_V_V_TDATA => ResizeStream_U0_out_V_V_TDATA,
        out_V_V_TVALID => ResizeStream_U0_out_V_V_TVALID,
        out_V_V_TREADY => s2_out_V_V_TREADY);

    inStr_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => loadPCL_U0_PCL_V_V_din,
        if_full_n => inStr_V_V_full_n,
        if_write => loadPCL_U0_PCL_V_V_write,
        if_dout => inStr_V_V_dout,
        if_empty_n => inStr_V_V_empty_n,
        if_read => CloneStreamOnce_U0_IN_V_V_read);

    cnv_26_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ResizeStream_1_U0_out_V_V_din,
        if_full_n => cnv_26_V_V_full_n,
        if_write => ResizeStream_1_U0_out_V_V_write,
        if_dout => cnv_26_V_V_dout,
        if_empty_n => cnv_26_V_V_empty_n,
        if_read => grouperPE_U0_features_V_V_read);

    in_1_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CloneStreamOnce_U0_out1_V_V_din,
        if_full_n => in_1_V_V_full_n,
        if_write => CloneStreamOnce_U0_out1_V_V_write,
        if_dout => in_1_V_V_dout,
        if_empty_n => in_1_V_V_empty_n,
        if_read => grouperPE_U0_inStream_V_V_read);

    cnv_27_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grouperPE_U0_outStream_V_V_din,
        if_full_n => cnv_27_V_V_full_n,
        if_write => grouperPE_U0_outStream_V_V_write,
        if_dout => cnv_27_V_V_dout,
        if_empty_n => cnv_27_V_V_empty_n,
        if_read => Conv1DBuffer_new397_U0_in_V_V_read);

    cnv_28_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new397_U0_out_V_V_din,
        if_full_n => cnv_28_V_V_full_n,
        if_write => Conv1DBuffer_new397_U0_out_V_V_write,
        if_dout => cnv_28_V_V_dout,
        if_empty_n => cnv_28_V_V_empty_n,
        if_read => Conv1DMac_new398_U0_in_V_V_read);

    cnv_29PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new398_U0_out_V_V_din,
        if_full_n => cnv_29PRL_V_V_full_n,
        if_write => Conv1DMac_new398_U0_out_V_V_write,
        if_dout => cnv_29PRL_V_V_dout,
        if_empty_n => cnv_29PRL_V_V_empty_n,
        if_read => Relu1D399_U0_in_V_V_read);

    cnv_30PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D399_U0_out_V_V_din,
        if_full_n => cnv_30PRL_V_V_full_n,
        if_write => Relu1D399_U0_out_V_V_write,
        if_dout => cnv_30PRL_V_V_dout,
        if_empty_n => cnv_30PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_1_U0_in_V_V_read);

    cnv_31_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        if_full_n => cnv_31_V_V_full_n,
        if_write => StreamingDataWidthCo_1_U0_out_V_V_write,
        if_dout => cnv_31_V_V_dout,
        if_empty_n => cnv_31_V_V_empty_n,
        if_read => Conv1DBuffer_new401_U0_in_V_V_read);

    cnv_32_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new401_U0_out_V_V_din,
        if_full_n => cnv_32_V_V_full_n,
        if_write => Conv1DBuffer_new401_U0_out_V_V_write,
        if_dout => cnv_32_V_V_dout,
        if_empty_n => cnv_32_V_V_empty_n,
        if_read => Conv1DMac_new402_U0_in_V_V_read);

    cnv_33PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new402_U0_out_V_V_din,
        if_full_n => cnv_33PRL_V_V_full_n,
        if_write => Conv1DMac_new402_U0_out_V_V_write,
        if_dout => cnv_33PRL_V_V_dout,
        if_empty_n => cnv_33PRL_V_V_empty_n,
        if_read => Relu1D403_U0_in_V_V_read);

    cnv_34PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D403_U0_out_V_V_din,
        if_full_n => cnv_34PRL_V_V_full_n,
        if_write => Relu1D403_U0_out_V_V_write,
        if_dout => cnv_34PRL_V_V_dout,
        if_empty_n => cnv_34PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_U0_in_V_V_read);

    cnv_35_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_U0_out_V_V_din,
        if_full_n => cnv_35_V_V_full_n,
        if_write => StreamingDataWidthCo_U0_out_V_V_write,
        if_dout => cnv_35_V_V_dout,
        if_empty_n => cnv_35_V_V_empty_n,
        if_read => Conv1DBuffer_new_U0_in_V_V_read);

    cnv_36_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_U0_out_V_V_din,
        if_full_n => cnv_36_V_V_full_n,
        if_write => Conv1DBuffer_new_U0_out_V_V_write,
        if_dout => cnv_36_V_V_dout,
        if_empty_n => cnv_36_V_V_empty_n,
        if_read => Conv1DMac_new_U0_in_V_V_read);

    cnv_37PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_U0_out_V_V_din,
        if_full_n => cnv_37PRL_V_V_full_n,
        if_write => Conv1DMac_new_U0_out_V_V_write,
        if_dout => cnv_37PRL_V_V_dout,
        if_empty_n => cnv_37PRL_V_V_empty_n,
        if_read => Relu1D_U0_in_V_V_read);

    cnv_38PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_U0_out_V_V_din,
        if_full_n => cnv_38PRL_V_V_full_n,
        if_write => Relu1D_U0_out_V_V_write,
        if_dout => cnv_38PRL_V_V_dout,
        if_empty_n => cnv_38PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_2_U0_in_V_V_read);

    cnv_39_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_2_U0_out_V_V_din,
        if_full_n => cnv_39_V_V_full_n,
        if_write => StreamingDataWidthCo_2_U0_out_V_V_write,
        if_dout => cnv_39_V_V_dout,
        if_empty_n => cnv_39_V_V_empty_n,
        if_read => StreamingMaxPool_Pre_U0_in_V_V_read);

    cnv_40_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        if_full_n => cnv_40_V_V_full_n,
        if_write => StreamingMaxPool_Pre_U0_out_V_V_write,
        if_dout => cnv_40_V_V_dout,
        if_empty_n => cnv_40_V_V_empty_n,
        if_read => Conv1DBuffer_new405_U0_in_V_V_read);

    cnv_41_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new405_U0_out_V_V_din,
        if_full_n => cnv_41_V_V_full_n,
        if_write => Conv1DBuffer_new405_U0_out_V_V_write,
        if_dout => cnv_41_V_V_dout,
        if_empty_n => cnv_41_V_V_empty_n,
        if_read => Conv1DMac_new406_U0_in_V_V_read);

    cnv_42PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new406_U0_out_V_V_din,
        if_full_n => cnv_42PRL_V_V_full_n,
        if_write => Conv1DMac_new406_U0_out_V_V_write,
        if_dout => cnv_42PRL_V_V_dout,
        if_empty_n => cnv_42PRL_V_V_empty_n,
        if_read => Relu1D407_U0_in_V_V_read);

    cnv_43PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D407_U0_out_V_V_din,
        if_full_n => cnv_43PRL_V_V_full_n,
        if_write => Relu1D407_U0_out_V_V_write,
        if_dout => cnv_43PRL_V_V_dout,
        if_empty_n => cnv_43PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_3_U0_in_V_V_read);

    cnv_44_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_3_U0_out_V_V_din,
        if_full_n => cnv_44_V_V_full_n,
        if_write => StreamingDataWidthCo_3_U0_out_V_V_write,
        if_dout => cnv_44_V_V_dout,
        if_empty_n => cnv_44_V_V_empty_n,
        if_read => Conv1DBuffer_new_1_U0_in_V_V_read);

    cnv_45_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_1_U0_out_V_V_din,
        if_full_n => cnv_45_V_V_full_n,
        if_write => Conv1DBuffer_new_1_U0_out_V_V_write,
        if_dout => cnv_45_V_V_dout,
        if_empty_n => cnv_45_V_V_empty_n,
        if_read => Conv1DMac_new_1_U0_in_V_V_read);

    cnv_46PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_1_U0_out_V_V_din,
        if_full_n => cnv_46PRL_V_V_full_n,
        if_write => Conv1DMac_new_1_U0_out_V_V_write,
        if_dout => cnv_46PRL_V_V_dout,
        if_empty_n => cnv_46PRL_V_V_empty_n,
        if_read => Relu1D_1_U0_in_V_V_read);

    cnv_47PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_1_U0_out_V_V_din,
        if_full_n => cnv_47PRL_V_V_full_n,
        if_write => Relu1D_1_U0_out_V_V_write,
        if_dout => cnv_47PRL_V_V_dout,
        if_empty_n => cnv_47PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_4_U0_in_V_V_read);

    cnv_48_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_4_U0_out_V_V_din,
        if_full_n => cnv_48_V_V_full_n,
        if_write => StreamingDataWidthCo_4_U0_out_V_V_write,
        if_dout => cnv_48_V_V_dout,
        if_empty_n => cnv_48_V_V_empty_n,
        if_read => ResizeStream_U0_in_V_V_read);

    start_for_grouperUhA_U : component start_for_grouperUhA
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_grouperPE_U0_din,
        if_full_n => start_for_grouperPE_U0_full_n,
        if_write => ResizeStream_1_U0_start_write,
        if_dout => start_for_grouperPE_U0_dout,
        if_empty_n => start_for_grouperPE_U0_empty_n,
        if_read => grouperPE_U0_ap_ready);

    start_for_Conv1DBVhK_U : component start_for_Conv1DBVhK
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new397_U0_din,
        if_full_n => start_for_Conv1DBuffer_new397_U0_full_n,
        if_write => grouperPE_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new397_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new397_U0_empty_n,
        if_read => Conv1DBuffer_new397_U0_ap_ready);

    start_for_Conv1DMWhU_U : component start_for_Conv1DMWhU
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new398_U0_din,
        if_full_n => start_for_Conv1DMac_new398_U0_full_n,
        if_write => Conv1DBuffer_new397_U0_start_write,
        if_dout => start_for_Conv1DMac_new398_U0_dout,
        if_empty_n => start_for_Conv1DMac_new398_U0_empty_n,
        if_read => Conv1DMac_new398_U0_ap_ready);

    start_for_Relu1D3Xh4_U : component start_for_Relu1D3Xh4
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D399_U0_din,
        if_full_n => start_for_Relu1D399_U0_full_n,
        if_write => Conv1DMac_new398_U0_start_write,
        if_dout => start_for_Relu1D399_U0_dout,
        if_empty_n => start_for_Relu1D399_U0_empty_n,
        if_read => Relu1D399_U0_ap_ready);

    start_for_StreamiYie_U : component start_for_StreamiYie
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_1_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        if_write => Relu1D399_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_1_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_1_U0_empty_n,
        if_read => StreamingDataWidthCo_1_U0_ap_ready);

    start_for_Conv1DBZio_U : component start_for_Conv1DBZio
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new401_U0_din,
        if_full_n => start_for_Conv1DBuffer_new401_U0_full_n,
        if_write => StreamingDataWidthCo_1_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new401_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new401_U0_empty_n,
        if_read => Conv1DBuffer_new401_U0_ap_ready);

    start_for_Conv1DM0iy_U : component start_for_Conv1DM0iy
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new402_U0_din,
        if_full_n => start_for_Conv1DMac_new402_U0_full_n,
        if_write => Conv1DBuffer_new401_U0_start_write,
        if_dout => start_for_Conv1DMac_new402_U0_dout,
        if_empty_n => start_for_Conv1DMac_new402_U0_empty_n,
        if_read => Conv1DMac_new402_U0_ap_ready);

    start_for_Relu1D41iI_U : component start_for_Relu1D41iI
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D403_U0_din,
        if_full_n => start_for_Relu1D403_U0_full_n,
        if_write => Conv1DMac_new402_U0_start_write,
        if_dout => start_for_Relu1D403_U0_dout,
        if_empty_n => start_for_Relu1D403_U0_empty_n,
        if_read => Relu1D403_U0_ap_ready);

    start_for_Streami2iS_U : component start_for_Streami2iS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        if_write => Relu1D403_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_U0_empty_n,
        if_read => StreamingDataWidthCo_U0_ap_ready);

    start_for_Conv1DB3i2_U : component start_for_Conv1DB3i2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        if_write => StreamingDataWidthCo_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_U0_empty_n,
        if_read => Conv1DBuffer_new_U0_ap_ready);

    start_for_Conv1DM4jc_U : component start_for_Conv1DM4jc
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_U0_din,
        if_full_n => start_for_Conv1DMac_new_U0_full_n,
        if_write => Conv1DBuffer_new_U0_start_write,
        if_dout => start_for_Conv1DMac_new_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_U0_empty_n,
        if_read => Conv1DMac_new_U0_ap_ready);

    start_for_Relu1D_U0_U : component start_for_Relu1D_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_U0_din,
        if_full_n => start_for_Relu1D_U0_full_n,
        if_write => Conv1DMac_new_U0_start_write,
        if_dout => start_for_Relu1D_U0_dout,
        if_empty_n => start_for_Relu1D_U0_empty_n,
        if_read => Relu1D_U0_ap_ready);

    start_for_Streami5jm_U : component start_for_Streami5jm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_2_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_2_U0_full_n,
        if_write => Relu1D_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_2_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_2_U0_empty_n,
        if_read => StreamingDataWidthCo_2_U0_ap_ready);

    start_for_Streami6jw_U : component start_for_Streami6jw
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingMaxPool_Pre_U0_din,
        if_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        if_write => StreamingDataWidthCo_2_U0_start_write,
        if_dout => start_for_StreamingMaxPool_Pre_U0_dout,
        if_empty_n => start_for_StreamingMaxPool_Pre_U0_empty_n,
        if_read => StreamingMaxPool_Pre_U0_ap_ready);

    start_for_Conv1DB7jG_U : component start_for_Conv1DB7jG
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new405_U0_din,
        if_full_n => start_for_Conv1DBuffer_new405_U0_full_n,
        if_write => StreamingMaxPool_Pre_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new405_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new405_U0_empty_n,
        if_read => Conv1DBuffer_new405_U0_ap_ready);

    start_for_Conv1DM8jQ_U : component start_for_Conv1DM8jQ
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new406_U0_din,
        if_full_n => start_for_Conv1DMac_new406_U0_full_n,
        if_write => Conv1DBuffer_new405_U0_start_write,
        if_dout => start_for_Conv1DMac_new406_U0_dout,
        if_empty_n => start_for_Conv1DMac_new406_U0_empty_n,
        if_read => Conv1DMac_new406_U0_ap_ready);

    start_for_Relu1D49j0_U : component start_for_Relu1D49j0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D407_U0_din,
        if_full_n => start_for_Relu1D407_U0_full_n,
        if_write => Conv1DMac_new406_U0_start_write,
        if_dout => start_for_Relu1D407_U0_dout,
        if_empty_n => start_for_Relu1D407_U0_empty_n,
        if_read => Relu1D407_U0_ap_ready);

    start_for_Streamibak_U : component start_for_Streamibak
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_3_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_3_U0_full_n,
        if_write => Relu1D407_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_3_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_3_U0_empty_n,
        if_read => StreamingDataWidthCo_3_U0_ap_ready);

    start_for_Conv1DBbbk_U : component start_for_Conv1DBbbk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_1_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_1_U0_full_n,
        if_write => StreamingDataWidthCo_3_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_1_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_1_U0_empty_n,
        if_read => Conv1DBuffer_new_1_U0_ap_ready);

    start_for_Conv1DMbck_U : component start_for_Conv1DMbck
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_1_U0_din,
        if_full_n => start_for_Conv1DMac_new_1_U0_full_n,
        if_write => Conv1DBuffer_new_1_U0_start_write,
        if_dout => start_for_Conv1DMac_new_1_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_1_U0_empty_n,
        if_read => Conv1DMac_new_1_U0_ap_ready);

    start_for_Relu1D_bdk_U : component start_for_Relu1D_bdk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_1_U0_din,
        if_full_n => start_for_Relu1D_1_U0_full_n,
        if_write => Conv1DMac_new_1_U0_start_write,
        if_dout => start_for_Relu1D_1_U0_dout,
        if_empty_n => start_for_Relu1D_1_U0_empty_n,
        if_read => Relu1D_1_U0_ap_ready);

    start_for_Streamibek_U : component start_for_Streamibek
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_4_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_4_U0_full_n,
        if_write => Relu1D_1_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_4_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_4_U0_empty_n,
        if_read => StreamingDataWidthCo_4_U0_ap_ready);

    start_for_ResizeSbfk_U : component start_for_ResizeSbfk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ResizeStream_U0_din,
        if_full_n => start_for_ResizeStream_U0_full_n,
        if_write => StreamingDataWidthCo_4_U0_start_write,
        if_dout => start_for_ResizeStream_U0_dout,
        if_empty_n => start_for_ResizeStream_U0_empty_n,
        if_read => ResizeStream_U0_ap_ready);





    CloneStreamOnce_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                CloneStreamOnce_U0_ap_start <= ap_const_logic_0;
            else
                CloneStreamOnce_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;

    CloneStreamOnce_U0_ap_continue <= ap_const_logic_1;
    CloneStreamOnce_U0_start_full_n <= ap_const_logic_1;
    CloneStreamOnce_U0_start_write <= ap_const_logic_0;
    Conv1DBuffer_new397_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new397_U0_ap_start <= start_for_Conv1DBuffer_new397_U0_empty_n;
    Conv1DBuffer_new401_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new401_U0_ap_start <= start_for_Conv1DBuffer_new401_U0_empty_n;
    Conv1DBuffer_new405_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new405_U0_ap_start <= start_for_Conv1DBuffer_new405_U0_empty_n;
    Conv1DBuffer_new_1_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_1_U0_ap_start <= start_for_Conv1DBuffer_new_1_U0_empty_n;
    Conv1DBuffer_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_U0_ap_start <= start_for_Conv1DBuffer_new_U0_empty_n;
    Conv1DMac_new398_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new398_U0_ap_start <= start_for_Conv1DMac_new398_U0_empty_n;
    Conv1DMac_new402_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new402_U0_ap_start <= start_for_Conv1DMac_new402_U0_empty_n;
    Conv1DMac_new406_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new406_U0_ap_start <= start_for_Conv1DMac_new406_U0_empty_n;
    Conv1DMac_new_1_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_1_U0_ap_start <= start_for_Conv1DMac_new_1_U0_empty_n;
    Conv1DMac_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_U0_ap_start <= start_for_Conv1DMac_new_U0_empty_n;
    Relu1D399_U0_ap_continue <= ap_const_logic_1;
    Relu1D399_U0_ap_start <= start_for_Relu1D399_U0_empty_n;
    Relu1D403_U0_ap_continue <= ap_const_logic_1;
    Relu1D403_U0_ap_start <= start_for_Relu1D403_U0_empty_n;
    Relu1D407_U0_ap_continue <= ap_const_logic_1;
    Relu1D407_U0_ap_start <= start_for_Relu1D407_U0_empty_n;
    Relu1D_1_U0_ap_continue <= ap_const_logic_1;
    Relu1D_1_U0_ap_start <= start_for_Relu1D_1_U0_empty_n;
    Relu1D_U0_ap_continue <= ap_const_logic_1;
    Relu1D_U0_ap_start <= start_for_Relu1D_U0_empty_n;
    ResizeStream_1_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_1_U0_ap_start <= ap_start;
    ResizeStream_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_U0_ap_start <= start_for_ResizeStream_U0_empty_n;
    ResizeStream_U0_start_full_n <= ap_const_logic_1;
    ResizeStream_U0_start_write <= ap_const_logic_0;
    StreamingDataWidthCo_1_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_1_U0_ap_start <= start_for_StreamingDataWidthCo_1_U0_empty_n;
    StreamingDataWidthCo_2_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_2_U0_ap_start <= start_for_StreamingDataWidthCo_2_U0_empty_n;
    StreamingDataWidthCo_3_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_3_U0_ap_start <= start_for_StreamingDataWidthCo_3_U0_empty_n;
    StreamingDataWidthCo_4_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_4_U0_ap_start <= start_for_StreamingDataWidthCo_4_U0_empty_n;
    StreamingDataWidthCo_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_U0_ap_start <= start_for_StreamingDataWidthCo_U0_empty_n;
    StreamingMaxPool_Pre_U0_ap_continue <= ap_const_logic_1;
    StreamingMaxPool_Pre_U0_ap_start <= start_for_StreamingMaxPool_Pre_U0_empty_n;
    ap_done <= ResizeStream_U0_ap_done;
    ap_idle <= (loadPCL_U0_ap_idle and grouperPE_U0_ap_idle and StreamingMaxPool_Pre_U0_ap_idle and StreamingDataWidthCo_U0_ap_idle and StreamingDataWidthCo_4_U0_ap_idle and StreamingDataWidthCo_3_U0_ap_idle and StreamingDataWidthCo_2_U0_ap_idle and StreamingDataWidthCo_1_U0_ap_idle and ResizeStream_U0_ap_idle and ResizeStream_1_U0_ap_idle and Relu1D_U0_ap_idle and Relu1D_1_U0_ap_idle and Relu1D407_U0_ap_idle and Relu1D403_U0_ap_idle and Relu1D399_U0_ap_idle and Conv1DMac_new_U0_ap_idle and Conv1DMac_new_1_U0_ap_idle and Conv1DMac_new406_U0_ap_idle and Conv1DMac_new402_U0_ap_idle and Conv1DMac_new398_U0_ap_idle and Conv1DBuffer_new_U0_ap_idle and Conv1DBuffer_new_1_U0_ap_idle and Conv1DBuffer_new405_U0_ap_idle and Conv1DBuffer_new401_U0_ap_idle and Conv1DBuffer_new397_U0_ap_idle and CloneStreamOnce_U0_ap_idle);
    ap_ready <= ResizeStream_1_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= ResizeStream_U0_ap_done;
    ap_sync_ready <= ResizeStream_1_U0_ap_ready;
    grouperPE_U0_ap_continue <= ap_const_logic_1;
    grouperPE_U0_ap_start <= start_for_grouperPE_U0_empty_n;
    input1_V_V_TREADY <= ResizeStream_1_U0_in_V_V_TREADY;
    loadPCL_U0_ap_continue <= ap_const_logic_1;
    loadPCL_U0_ap_start <= ap_start;
    loadPCL_U0_start_full_n <= ap_const_logic_1;
    loadPCL_U0_start_write <= ap_const_logic_0;
    s2_out_V_V_TDATA <= ResizeStream_U0_out_V_V_TDATA;
    s2_out_V_V_TVALID <= ResizeStream_U0_out_V_V_TVALID;
    start_for_Conv1DBuffer_new397_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new401_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new405_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new398_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new402_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new406_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D399_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D403_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D407_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ResizeStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingMaxPool_Pre_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_grouperPE_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new327_HH_
#define _Conv1DMac_new327_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS1_mux_164DeQ_x_x_x.h"
#include "Conv1DMac_new327_QgW.h"
#include "Conv1DMac_new327_Rg6.h"
#include "Conv1DMac_new327_Shg.h"
#include "Conv1DMac_new327_Thq.h"

namespace ap_rtl {

struct Conv1DMac_new327 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;
    sc_signal< sc_lv<8> > ap_var_for_const29;
    sc_signal< sc_lv<8> > ap_var_for_const30;
    sc_signal< sc_lv<8> > ap_var_for_const31;
    sc_signal< sc_lv<8> > ap_var_for_const32;
    sc_signal< sc_lv<8> > ap_var_for_const33;
    sc_signal< sc_lv<8> > ap_var_for_const34;
    sc_signal< sc_lv<8> > ap_var_for_const35;
    sc_signal< sc_lv<8> > ap_var_for_const36;


    // Module declarations
    Conv1DMac_new327(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new327);

    ~Conv1DMac_new327();

    sc_trace_file* mVcdFile;

    Conv1DMac_new327_QgW* weights4_m_weights_V_U;
    Conv1DMac_new327_Rg6* weights4_m_weights_V_1_U;
    Conv1DMac_new327_Shg* weights4_m_weights_V_2_U;
    Conv1DMac_new327_Thq* weights4_m_weights_V_3_U;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U104;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U105;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U106;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U107;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights4_m_weights_V_address0;
    sc_signal< sc_logic > weights4_m_weights_V_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_1_address0;
    sc_signal< sc_logic > weights4_m_weights_V_1_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_1_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_2_address0;
    sc_signal< sc_logic > weights4_m_weights_V_2_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_2_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_3_address0;
    sc_signal< sc_logic > weights4_m_weights_V_3_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1044;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_49_reg_1071;
    sc_signal< sc_lv<1> > tmp_49_reg_1071_pp0_iter2_reg;
    sc_signal< sc_lv<19> > indvar_flatten3_reg_273;
    sc_signal< sc_lv<12> > indvar_flatten_reg_284;
    sc_signal< sc_lv<5> > nm_reg_295;
    sc_signal< sc_lv<7> > sf_reg_306;
    sc_signal< sc_lv<1> > exitcond_flatten3_fu_349_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1044_pp0_iter1_reg;
    sc_signal< sc_lv<19> > indvar_flatten_next3_fu_355_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > nm_t_mid2_fu_449_p3;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1053;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1053_pp0_iter1_reg;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1053_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_mid2_fu_457_p3;
    sc_signal< sc_lv<10> > tmp_42_fu_469_p2;
    sc_signal< sc_lv<10> > tmp_42_reg_1066;
    sc_signal< sc_lv<1> > tmp_49_fu_475_p2;
    sc_signal< sc_lv<1> > tmp_49_reg_1071_pp0_iter1_reg;
    sc_signal< sc_lv<7> > sf_1_fu_481_p2;
    sc_signal< sc_lv<12> > indvar_flatten_next_fu_493_p3;
    sc_signal< sc_lv<8> > tmp_V_48_reg_1085;
    sc_signal< sc_lv<8> > tmp_46_reg_1110;
    sc_signal< sc_lv<1> > tmp_48_fu_563_p2;
    sc_signal< sc_lv<1> > tmp_48_reg_1115;
    sc_signal< sc_lv<8> > tmp_164_1_reg_1120;
    sc_signal< sc_lv<1> > tmp_169_1_fu_621_p2;
    sc_signal< sc_lv<1> > tmp_169_1_reg_1125;
    sc_signal< sc_lv<8> > tmp_164_2_reg_1130;
    sc_signal< sc_lv<1> > tmp_169_2_fu_679_p2;
    sc_signal< sc_lv<1> > tmp_169_2_reg_1135;
    sc_signal< sc_lv<8> > tmp_164_3_reg_1140;
    sc_signal< sc_lv<1> > tmp_169_3_fu_737_p2;
    sc_signal< sc_lv<1> > tmp_169_3_reg_1145;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > tmp_43_fu_501_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_1_fu_192;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_763_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_1_fu_196;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_777_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_1_fu_200;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_791_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_1_fu_204;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_805_p2;
    sc_signal< sc_lv<4> > tmp_fu_337_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_361_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_341_p3;
    sc_signal< sc_lv<1> > tmp_353_fu_397_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_391_p2;
    sc_signal< sc_lv<5> > nm_mid_fu_367_p3;
    sc_signal< sc_lv<1> > tmp_91_mid_fu_403_p2;
    sc_signal< sc_lv<1> > tmp_354_fu_415_p2;
    sc_signal< sc_lv<5> > nm_1_fu_409_p2;
    sc_signal< sc_lv<4> > tmp_690_fu_429_p1;
    sc_signal< sc_lv<10> > tmp_90_mid1_fu_433_p3;
    sc_signal< sc_lv<10> > tmp_90_mid_fu_375_p3;
    sc_signal< sc_lv<4> > nm_t_mid_fu_383_p3;
    sc_signal< sc_lv<7> > sf_mid2_fu_421_p3;
    sc_signal< sc_lv<10> > sf_cast1_fu_465_p1;
    sc_signal< sc_lv<10> > tmp_90_mid2_fu_441_p3;
    sc_signal< sc_lv<12> > indvar_flatten_op_fu_487_p2;
    sc_signal< sc_lv<8> > tmp_45_fu_515_p0;
    sc_signal< sc_lv<8> > tmp_45_fu_515_p1;
    sc_signal< sc_lv<16> > p_071_assign_1_fu_508_p1;
    sc_signal< sc_lv<16> > tmp_45_fu_515_p2;
    sc_signal< sc_lv<6> > tmp_692_fu_539_p1;
    sc_signal< sc_lv<1> > tmp_691_fu_521_p3;
    sc_signal< sc_lv<1> > p_s_fu_543_p2;
    sc_signal< sc_lv<1> > tmp_47_fu_549_p2;
    sc_signal< sc_lv<1> > tmp_693_fu_555_p3;
    sc_signal< sc_lv<8> > tmp_162_1_fu_573_p0;
    sc_signal< sc_lv<8> > tmp_162_1_fu_573_p1;
    sc_signal< sc_lv<16> > tmp_162_1_fu_573_p2;
    sc_signal< sc_lv<6> > tmp_695_fu_597_p1;
    sc_signal< sc_lv<1> > tmp_694_fu_579_p3;
    sc_signal< sc_lv<1> > p_1_fu_601_p2;
    sc_signal< sc_lv<1> > tmp_165_1_fu_607_p2;
    sc_signal< sc_lv<1> > tmp_696_fu_613_p3;
    sc_signal< sc_lv<8> > tmp_162_2_fu_631_p0;
    sc_signal< sc_lv<8> > tmp_162_2_fu_631_p1;
    sc_signal< sc_lv<16> > tmp_162_2_fu_631_p2;
    sc_signal< sc_lv<6> > tmp_698_fu_655_p1;
    sc_signal< sc_lv<1> > tmp_697_fu_637_p3;
    sc_signal< sc_lv<1> > p_2_fu_659_p2;
    sc_signal< sc_lv<1> > tmp_165_2_fu_665_p2;
    sc_signal< sc_lv<1> > tmp_699_fu_671_p3;
    sc_signal< sc_lv<8> > tmp_162_3_fu_689_p0;
    sc_signal< sc_lv<8> > tmp_162_3_fu_689_p1;
    sc_signal< sc_lv<16> > tmp_162_3_fu_689_p2;
    sc_signal< sc_lv<6> > tmp_701_fu_713_p1;
    sc_signal< sc_lv<1> > tmp_700_fu_695_p3;
    sc_signal< sc_lv<1> > p_3_fu_717_p2;
    sc_signal< sc_lv<1> > tmp_165_3_fu_723_p2;
    sc_signal< sc_lv<1> > tmp_702_fu_729_p3;
    sc_signal< sc_lv<8> > tmp_169_cast_fu_755_p1;
    sc_signal< sc_lv<8> > tmp1_fu_758_p2;
    sc_signal< sc_lv<8> > tmp_169_1_cast_fu_769_p1;
    sc_signal< sc_lv<8> > tmp2_fu_772_p2;
    sc_signal< sc_lv<8> > tmp_169_2_cast_fu_783_p1;
    sc_signal< sc_lv<8> > tmp3_fu_786_p2;
    sc_signal< sc_lv<8> > tmp_169_3_cast_fu_797_p1;
    sc_signal< sc_lv<8> > tmp4_fu_800_p2;
    sc_signal< sc_lv<8> > tmp_50_fu_831_p18;
    sc_signal< sc_lv<8> > tmp_51_fu_874_p18;
    sc_signal< sc_lv<8> > tmp_52_fu_917_p18;
    sc_signal< sc_lv<8> > tmp_53_fu_960_p18;
    sc_signal< sc_lv<8> > result_V_3_fu_997_p2;
    sc_signal< sc_lv<8> > result_V_2_fu_954_p2;
    sc_signal< sc_lv<8> > result_V_1_fu_911_p2;
    sc_signal< sc_lv<8> > result_V_fu_868_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<19> ap_const_lv19_40000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_DC;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_EC;
    static const sc_lv<8> ap_const_lv8_8E;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_BC;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_EB;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_27;
    static const sc_lv<8> ap_const_lv8_D6;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_DB;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_B5;
    static const sc_lv<8> ap_const_lv8_ED;
    static const sc_lv<8> ap_const_lv8_60;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_EE;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_43;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<8> ap_const_lv8_22;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_B3;
    static const sc_lv<8> ap_const_lv8_C7;
    static const sc_lv<8> ap_const_lv8_6E;
    static const sc_lv<8> ap_const_lv8_21;
    static const sc_lv<8> ap_const_lv8_30;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_var_for_const30();
    void thread_ap_var_for_const31();
    void thread_ap_var_for_const32();
    void thread_ap_var_for_const33();
    void thread_ap_var_for_const34();
    void thread_ap_var_for_const35();
    void thread_ap_var_for_const36();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten3_fu_349_p2();
    void thread_exitcond_flatten_fu_361_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next3_fu_355_p2();
    void thread_indvar_flatten_next_fu_493_p3();
    void thread_indvar_flatten_op_fu_487_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_763_p2();
    void thread_macRegisters_1_V_fu_777_p2();
    void thread_macRegisters_2_V_fu_791_p2();
    void thread_macRegisters_3_V_fu_805_p2();
    void thread_nm_1_fu_409_p2();
    void thread_nm_mid2_fu_457_p3();
    void thread_nm_mid_fu_367_p3();
    void thread_nm_t_mid2_fu_449_p3();
    void thread_nm_t_mid_fu_383_p3();
    void thread_not_exitcond_flatten_fu_391_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_071_assign_1_fu_508_p1();
    void thread_p_1_fu_601_p2();
    void thread_p_2_fu_659_p2();
    void thread_p_3_fu_717_p2();
    void thread_p_s_fu_543_p2();
    void thread_real_start();
    void thread_result_V_1_fu_911_p2();
    void thread_result_V_2_fu_954_p2();
    void thread_result_V_3_fu_997_p2();
    void thread_result_V_fu_868_p2();
    void thread_sf_1_fu_481_p2();
    void thread_sf_cast1_fu_465_p1();
    void thread_sf_mid2_fu_421_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_758_p2();
    void thread_tmp2_fu_772_p2();
    void thread_tmp3_fu_786_p2();
    void thread_tmp4_fu_800_p2();
    void thread_tmp_162_1_fu_573_p0();
    void thread_tmp_162_1_fu_573_p1();
    void thread_tmp_162_1_fu_573_p2();
    void thread_tmp_162_2_fu_631_p0();
    void thread_tmp_162_2_fu_631_p1();
    void thread_tmp_162_2_fu_631_p2();
    void thread_tmp_162_3_fu_689_p0();
    void thread_tmp_162_3_fu_689_p1();
    void thread_tmp_162_3_fu_689_p2();
    void thread_tmp_165_1_fu_607_p2();
    void thread_tmp_165_2_fu_665_p2();
    void thread_tmp_165_3_fu_723_p2();
    void thread_tmp_169_1_cast_fu_769_p1();
    void thread_tmp_169_1_fu_621_p2();
    void thread_tmp_169_2_cast_fu_783_p1();
    void thread_tmp_169_2_fu_679_p2();
    void thread_tmp_169_3_cast_fu_797_p1();
    void thread_tmp_169_3_fu_737_p2();
    void thread_tmp_169_cast_fu_755_p1();
    void thread_tmp_353_fu_397_p2();
    void thread_tmp_354_fu_415_p2();
    void thread_tmp_42_fu_469_p2();
    void thread_tmp_43_fu_501_p1();
    void thread_tmp_45_fu_515_p0();
    void thread_tmp_45_fu_515_p1();
    void thread_tmp_45_fu_515_p2();
    void thread_tmp_47_fu_549_p2();
    void thread_tmp_48_fu_563_p2();
    void thread_tmp_49_fu_475_p2();
    void thread_tmp_690_fu_429_p1();
    void thread_tmp_691_fu_521_p3();
    void thread_tmp_692_fu_539_p1();
    void thread_tmp_693_fu_555_p3();
    void thread_tmp_694_fu_579_p3();
    void thread_tmp_695_fu_597_p1();
    void thread_tmp_696_fu_613_p3();
    void thread_tmp_697_fu_637_p3();
    void thread_tmp_698_fu_655_p1();
    void thread_tmp_699_fu_671_p3();
    void thread_tmp_700_fu_695_p3();
    void thread_tmp_701_fu_713_p1();
    void thread_tmp_702_fu_729_p3();
    void thread_tmp_90_mid1_fu_433_p3();
    void thread_tmp_90_mid2_fu_441_p3();
    void thread_tmp_90_mid_fu_375_p3();
    void thread_tmp_91_mid_fu_403_p2();
    void thread_tmp_fu_337_p1();
    void thread_tmp_s_fu_341_p3();
    void thread_weights4_m_weights_V_1_address0();
    void thread_weights4_m_weights_V_1_ce0();
    void thread_weights4_m_weights_V_2_address0();
    void thread_weights4_m_weights_V_2_ce0();
    void thread_weights4_m_weights_V_3_address0();
    void thread_weights4_m_weights_V_3_ce0();
    void thread_weights4_m_weights_V_address0();
    void thread_weights4_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

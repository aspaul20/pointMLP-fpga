// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new319_HH_
#define _Conv1DMac_new319_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS1_mux_164DeQ.h"
#include "Conv1DMac_new319_zec.h"
#include "Conv1DMac_new319_Aem.h"
#include "Conv1DMac_new319_Bew.h"
#include "Conv1DMac_new319_CeG.h"

namespace ap_rtl {

struct Conv1DMac_new319 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;


    // Module declarations
    Conv1DMac_new319(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new319);

    ~Conv1DMac_new319();

    sc_trace_file* mVcdFile;

    Conv1DMac_new319_zec* weights1_m_weights_V_U;
    Conv1DMac_new319_Aem* weights1_m_weights_V_1_U;
    Conv1DMac_new319_Bew* weights1_m_weights_V_2_U;
    Conv1DMac_new319_CeG* weights1_m_weights_V_3_U;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U42;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U43;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U44;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U45;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights1_m_weights_V_address0;
    sc_signal< sc_logic > weights1_m_weights_V_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_1_address0;
    sc_signal< sc_logic > weights1_m_weights_V_1_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_1_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_2_address0;
    sc_signal< sc_logic > weights1_m_weights_V_2_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_2_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_3_address0;
    sc_signal< sc_logic > weights1_m_weights_V_3_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1030;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_69_reg_1057;
    sc_signal< sc_lv<1> > tmp_69_reg_1057_pp0_iter2_reg;
    sc_signal< sc_lv<23> > indvar_flatten5_reg_259;
    sc_signal< sc_lv<12> > indvar_flatten_reg_270;
    sc_signal< sc_lv<5> > nm_reg_281;
    sc_signal< sc_lv<7> > sf_reg_292;
    sc_signal< sc_lv<1> > exitcond_flatten5_fu_335_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1030_pp0_iter1_reg;
    sc_signal< sc_lv<23> > indvar_flatten_next5_fu_341_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > nm_t_mid2_fu_435_p3;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1039;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1039_pp0_iter1_reg;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1039_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_mid2_fu_443_p3;
    sc_signal< sc_lv<10> > tmp_62_fu_455_p2;
    sc_signal< sc_lv<10> > tmp_62_reg_1052;
    sc_signal< sc_lv<1> > tmp_69_fu_461_p2;
    sc_signal< sc_lv<1> > tmp_69_reg_1057_pp0_iter1_reg;
    sc_signal< sc_lv<7> > sf_1_fu_467_p2;
    sc_signal< sc_lv<12> > indvar_flatten_next_fu_479_p3;
    sc_signal< sc_lv<8> > tmp_V_50_reg_1071;
    sc_signal< sc_lv<8> > tmp_66_reg_1096;
    sc_signal< sc_lv<1> > tmp_68_fu_549_p2;
    sc_signal< sc_lv<1> > tmp_68_reg_1101;
    sc_signal< sc_lv<8> > tmp_142_1_reg_1106;
    sc_signal< sc_lv<1> > tmp_147_1_fu_607_p2;
    sc_signal< sc_lv<1> > tmp_147_1_reg_1111;
    sc_signal< sc_lv<8> > tmp_142_2_reg_1116;
    sc_signal< sc_lv<1> > tmp_147_2_fu_665_p2;
    sc_signal< sc_lv<1> > tmp_147_2_reg_1121;
    sc_signal< sc_lv<8> > tmp_142_3_reg_1126;
    sc_signal< sc_lv<1> > tmp_147_3_fu_723_p2;
    sc_signal< sc_lv<1> > tmp_147_3_reg_1131;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > tmp_63_fu_487_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_3_fu_178;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_749_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_3_fu_182;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_763_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_3_fu_186;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_777_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_3_fu_190;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_791_p2;
    sc_signal< sc_lv<4> > tmp_fu_323_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_347_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_327_p3;
    sc_signal< sc_lv<1> > tmp_357_fu_383_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_377_p2;
    sc_signal< sc_lv<5> > nm_mid_fu_353_p3;
    sc_signal< sc_lv<1> > tmp_61_mid_fu_389_p2;
    sc_signal< sc_lv<1> > tmp_358_fu_401_p2;
    sc_signal< sc_lv<5> > nm_1_fu_395_p2;
    sc_signal< sc_lv<4> > tmp_716_fu_415_p1;
    sc_signal< sc_lv<10> > tmp_60_mid1_fu_419_p3;
    sc_signal< sc_lv<10> > tmp_60_mid_fu_361_p3;
    sc_signal< sc_lv<4> > nm_t_mid_fu_369_p3;
    sc_signal< sc_lv<7> > sf_mid2_fu_407_p3;
    sc_signal< sc_lv<10> > sf_cast1_fu_451_p1;
    sc_signal< sc_lv<10> > tmp_60_mid2_fu_427_p3;
    sc_signal< sc_lv<12> > indvar_flatten_op_fu_473_p2;
    sc_signal< sc_lv<8> > tmp_65_fu_501_p0;
    sc_signal< sc_lv<8> > tmp_65_fu_501_p1;
    sc_signal< sc_lv<16> > p_071_assign_1_fu_494_p1;
    sc_signal< sc_lv<16> > tmp_65_fu_501_p2;
    sc_signal< sc_lv<6> > tmp_718_fu_525_p1;
    sc_signal< sc_lv<1> > tmp_717_fu_507_p3;
    sc_signal< sc_lv<1> > p_s_fu_529_p2;
    sc_signal< sc_lv<1> > tmp_67_fu_535_p2;
    sc_signal< sc_lv<1> > tmp_719_fu_541_p3;
    sc_signal< sc_lv<8> > tmp_140_1_fu_559_p0;
    sc_signal< sc_lv<8> > tmp_140_1_fu_559_p1;
    sc_signal< sc_lv<16> > tmp_140_1_fu_559_p2;
    sc_signal< sc_lv<6> > tmp_721_fu_583_p1;
    sc_signal< sc_lv<1> > tmp_720_fu_565_p3;
    sc_signal< sc_lv<1> > p_1_fu_587_p2;
    sc_signal< sc_lv<1> > tmp_143_1_fu_593_p2;
    sc_signal< sc_lv<1> > tmp_722_fu_599_p3;
    sc_signal< sc_lv<8> > tmp_140_2_fu_617_p0;
    sc_signal< sc_lv<8> > tmp_140_2_fu_617_p1;
    sc_signal< sc_lv<16> > tmp_140_2_fu_617_p2;
    sc_signal< sc_lv<6> > tmp_724_fu_641_p1;
    sc_signal< sc_lv<1> > tmp_723_fu_623_p3;
    sc_signal< sc_lv<1> > p_2_fu_645_p2;
    sc_signal< sc_lv<1> > tmp_143_2_fu_651_p2;
    sc_signal< sc_lv<1> > tmp_725_fu_657_p3;
    sc_signal< sc_lv<8> > tmp_140_3_fu_675_p0;
    sc_signal< sc_lv<8> > tmp_140_3_fu_675_p1;
    sc_signal< sc_lv<16> > tmp_140_3_fu_675_p2;
    sc_signal< sc_lv<6> > tmp_727_fu_699_p1;
    sc_signal< sc_lv<1> > tmp_726_fu_681_p3;
    sc_signal< sc_lv<1> > p_3_fu_703_p2;
    sc_signal< sc_lv<1> > tmp_143_3_fu_709_p2;
    sc_signal< sc_lv<1> > tmp_728_fu_715_p3;
    sc_signal< sc_lv<8> > tmp_147_cast_fu_741_p1;
    sc_signal< sc_lv<8> > tmp1_fu_744_p2;
    sc_signal< sc_lv<8> > tmp_147_1_cast_fu_755_p1;
    sc_signal< sc_lv<8> > tmp2_fu_758_p2;
    sc_signal< sc_lv<8> > tmp_147_2_cast_fu_769_p1;
    sc_signal< sc_lv<8> > tmp3_fu_772_p2;
    sc_signal< sc_lv<8> > tmp_147_3_cast_fu_783_p1;
    sc_signal< sc_lv<8> > tmp4_fu_786_p2;
    sc_signal< sc_lv<8> > tmp_70_fu_817_p18;
    sc_signal< sc_lv<8> > tmp_71_fu_860_p18;
    sc_signal< sc_lv<8> > tmp_72_fu_903_p18;
    sc_signal< sc_lv<8> > tmp_73_fu_946_p18;
    sc_signal< sc_lv<8> > result_V_3_fu_983_p2;
    sc_signal< sc_lv<8> > result_V_2_fu_940_p2;
    sc_signal< sc_lv<8> > result_V_1_fu_897_p2;
    sc_signal< sc_lv<8> > result_V_fu_854_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<23> ap_const_lv23_400000;
    static const sc_lv<23> ap_const_lv23_1;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<8> ap_const_lv8_16;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_18;
    static const sc_lv<8> ap_const_lv8_1B;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_15;
    static const sc_lv<8> ap_const_lv8_22;
    static const sc_lv<8> ap_const_lv8_25;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_1E;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<8> ap_const_lv8_13;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_14;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_24;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten5_fu_335_p2();
    void thread_exitcond_flatten_fu_347_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next5_fu_341_p2();
    void thread_indvar_flatten_next_fu_479_p3();
    void thread_indvar_flatten_op_fu_473_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_749_p2();
    void thread_macRegisters_1_V_fu_763_p2();
    void thread_macRegisters_2_V_fu_777_p2();
    void thread_macRegisters_3_V_fu_791_p2();
    void thread_nm_1_fu_395_p2();
    void thread_nm_mid2_fu_443_p3();
    void thread_nm_mid_fu_353_p3();
    void thread_nm_t_mid2_fu_435_p3();
    void thread_nm_t_mid_fu_369_p3();
    void thread_not_exitcond_flatten_fu_377_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_071_assign_1_fu_494_p1();
    void thread_p_1_fu_587_p2();
    void thread_p_2_fu_645_p2();
    void thread_p_3_fu_703_p2();
    void thread_p_s_fu_529_p2();
    void thread_real_start();
    void thread_result_V_1_fu_897_p2();
    void thread_result_V_2_fu_940_p2();
    void thread_result_V_3_fu_983_p2();
    void thread_result_V_fu_854_p2();
    void thread_sf_1_fu_467_p2();
    void thread_sf_cast1_fu_451_p1();
    void thread_sf_mid2_fu_407_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_744_p2();
    void thread_tmp2_fu_758_p2();
    void thread_tmp3_fu_772_p2();
    void thread_tmp4_fu_786_p2();
    void thread_tmp_140_1_fu_559_p0();
    void thread_tmp_140_1_fu_559_p1();
    void thread_tmp_140_1_fu_559_p2();
    void thread_tmp_140_2_fu_617_p0();
    void thread_tmp_140_2_fu_617_p1();
    void thread_tmp_140_2_fu_617_p2();
    void thread_tmp_140_3_fu_675_p0();
    void thread_tmp_140_3_fu_675_p1();
    void thread_tmp_140_3_fu_675_p2();
    void thread_tmp_143_1_fu_593_p2();
    void thread_tmp_143_2_fu_651_p2();
    void thread_tmp_143_3_fu_709_p2();
    void thread_tmp_147_1_cast_fu_755_p1();
    void thread_tmp_147_1_fu_607_p2();
    void thread_tmp_147_2_cast_fu_769_p1();
    void thread_tmp_147_2_fu_665_p2();
    void thread_tmp_147_3_cast_fu_783_p1();
    void thread_tmp_147_3_fu_723_p2();
    void thread_tmp_147_cast_fu_741_p1();
    void thread_tmp_357_fu_383_p2();
    void thread_tmp_358_fu_401_p2();
    void thread_tmp_60_mid1_fu_419_p3();
    void thread_tmp_60_mid2_fu_427_p3();
    void thread_tmp_60_mid_fu_361_p3();
    void thread_tmp_61_mid_fu_389_p2();
    void thread_tmp_62_fu_455_p2();
    void thread_tmp_63_fu_487_p1();
    void thread_tmp_65_fu_501_p0();
    void thread_tmp_65_fu_501_p1();
    void thread_tmp_65_fu_501_p2();
    void thread_tmp_67_fu_535_p2();
    void thread_tmp_68_fu_549_p2();
    void thread_tmp_69_fu_461_p2();
    void thread_tmp_716_fu_415_p1();
    void thread_tmp_717_fu_507_p3();
    void thread_tmp_718_fu_525_p1();
    void thread_tmp_719_fu_541_p3();
    void thread_tmp_720_fu_565_p3();
    void thread_tmp_721_fu_583_p1();
    void thread_tmp_722_fu_599_p3();
    void thread_tmp_723_fu_623_p3();
    void thread_tmp_724_fu_641_p1();
    void thread_tmp_725_fu_657_p3();
    void thread_tmp_726_fu_681_p3();
    void thread_tmp_727_fu_699_p1();
    void thread_tmp_728_fu_715_p3();
    void thread_tmp_fu_323_p1();
    void thread_tmp_s_fu_327_p3();
    void thread_weights1_m_weights_V_1_address0();
    void thread_weights1_m_weights_V_1_ce0();
    void thread_weights1_m_weights_V_2_address0();
    void thread_weights1_m_weights_V_2_ce0();
    void thread_weights1_m_weights_V_3_address0();
    void thread_weights1_m_weights_V_3_ce0();
    void thread_weights1_m_weights_V_address0();
    void thread_weights1_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

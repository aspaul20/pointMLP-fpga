// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new_HH_
#define _Conv1DMac_new_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS1_mux_164DeQ_x_x.h"
#include "Conv1DMac_new_weiKfY.h"
#include "Conv1DMac_new_weiLf8.h"
#include "Conv1DMac_new_weiMgi.h"
#include "Conv1DMac_new_weiNgs.h"

namespace ap_rtl {

struct Conv1DMac_new : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;
    sc_signal< sc_lv<8> > ap_var_for_const29;
    sc_signal< sc_lv<8> > ap_var_for_const30;
    sc_signal< sc_lv<8> > ap_var_for_const31;
    sc_signal< sc_lv<8> > ap_var_for_const32;
    sc_signal< sc_lv<8> > ap_var_for_const33;
    sc_signal< sc_lv<8> > ap_var_for_const34;
    sc_signal< sc_lv<8> > ap_var_for_const35;
    sc_signal< sc_lv<8> > ap_var_for_const36;
    sc_signal< sc_lv<8> > ap_var_for_const37;
    sc_signal< sc_lv<8> > ap_var_for_const38;


    // Module declarations
    Conv1DMac_new(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new);

    ~Conv1DMac_new();

    sc_trace_file* mVcdFile;

    Conv1DMac_new_weiKfY* weights3_m_weights_V_U;
    Conv1DMac_new_weiLf8* weights3_m_weights_V_1_U;
    Conv1DMac_new_weiMgi* weights3_m_weights_V_2_U;
    Conv1DMac_new_weiNgs* weights3_m_weights_V_3_U;
    computeS1_mux_164DeQ_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_U81;
    computeS1_mux_164DeQ_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_U82;
    computeS1_mux_164DeQ_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_U83;
    computeS1_mux_164DeQ_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_U84;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights3_m_weights_V_address0;
    sc_signal< sc_logic > weights3_m_weights_V_ce0;
    sc_signal< sc_lv<8> > weights3_m_weights_V_q0;
    sc_signal< sc_lv<10> > weights3_m_weights_V_1_address0;
    sc_signal< sc_logic > weights3_m_weights_V_1_ce0;
    sc_signal< sc_lv<8> > weights3_m_weights_V_1_q0;
    sc_signal< sc_lv<10> > weights3_m_weights_V_2_address0;
    sc_signal< sc_logic > weights3_m_weights_V_2_ce0;
    sc_signal< sc_lv<8> > weights3_m_weights_V_2_q0;
    sc_signal< sc_lv<10> > weights3_m_weights_V_3_address0;
    sc_signal< sc_logic > weights3_m_weights_V_3_ce0;
    sc_signal< sc_lv<8> > weights3_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1048;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_87_reg_1075;
    sc_signal< sc_lv<1> > tmp_87_reg_1075_pp0_iter2_reg;
    sc_signal< sc_lv<23> > indvar_flatten8_reg_277;
    sc_signal< sc_lv<12> > indvar_flatten_reg_288;
    sc_signal< sc_lv<5> > nm_reg_299;
    sc_signal< sc_lv<7> > sf_reg_310;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_353_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1048_pp0_iter1_reg;
    sc_signal< sc_lv<23> > indvar_flatten_next8_fu_359_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > nm_t_mid2_fu_453_p3;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1057;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1057_pp0_iter1_reg;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1057_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_mid2_fu_461_p3;
    sc_signal< sc_lv<10> > tmp_78_fu_473_p2;
    sc_signal< sc_lv<10> > tmp_78_reg_1070;
    sc_signal< sc_lv<1> > tmp_87_fu_479_p2;
    sc_signal< sc_lv<1> > tmp_87_reg_1075_pp0_iter1_reg;
    sc_signal< sc_lv<7> > sf_1_fu_485_p2;
    sc_signal< sc_lv<12> > indvar_flatten_next_fu_497_p3;
    sc_signal< sc_lv<8> > tmp_V_53_reg_1089;
    sc_signal< sc_lv<8> > tmp_83_reg_1114;
    sc_signal< sc_lv<1> > tmp_86_fu_567_p2;
    sc_signal< sc_lv<1> > tmp_86_reg_1119;
    sc_signal< sc_lv<8> > tmp_142_1_reg_1124;
    sc_signal< sc_lv<1> > tmp_147_1_fu_625_p2;
    sc_signal< sc_lv<1> > tmp_147_1_reg_1129;
    sc_signal< sc_lv<8> > tmp_142_2_reg_1134;
    sc_signal< sc_lv<1> > tmp_147_2_fu_683_p2;
    sc_signal< sc_lv<1> > tmp_147_2_reg_1139;
    sc_signal< sc_lv<8> > tmp_142_3_reg_1144;
    sc_signal< sc_lv<1> > tmp_147_3_fu_741_p2;
    sc_signal< sc_lv<1> > tmp_147_3_reg_1149;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > tmp_79_fu_505_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_6_fu_196;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_767_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_6_fu_200;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_781_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_6_fu_204;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_795_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_6_fu_208;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_809_p2;
    sc_signal< sc_lv<4> > tmp_fu_341_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_365_p2;
    sc_signal< sc_lv<10> > tmp_75_fu_345_p3;
    sc_signal< sc_lv<1> > tmp_363_fu_401_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_395_p2;
    sc_signal< sc_lv<5> > nm_mid_fu_371_p3;
    sc_signal< sc_lv<1> > tmp_76_mid_fu_407_p2;
    sc_signal< sc_lv<1> > tmp_364_fu_419_p2;
    sc_signal< sc_lv<5> > nm_1_fu_413_p2;
    sc_signal< sc_lv<4> > tmp_759_fu_433_p1;
    sc_signal< sc_lv<10> > tmp_75_mid1_fu_437_p3;
    sc_signal< sc_lv<10> > tmp_75_mid_fu_379_p3;
    sc_signal< sc_lv<4> > nm_t_mid_fu_387_p3;
    sc_signal< sc_lv<7> > sf_mid2_fu_425_p3;
    sc_signal< sc_lv<10> > sf_cast1_fu_469_p1;
    sc_signal< sc_lv<10> > tmp_75_mid2_fu_445_p3;
    sc_signal< sc_lv<12> > indvar_flatten_op_fu_491_p2;
    sc_signal< sc_lv<8> > tmp_81_fu_519_p0;
    sc_signal< sc_lv<8> > tmp_81_fu_519_p1;
    sc_signal< sc_lv<16> > p_071_assign_1_fu_512_p1;
    sc_signal< sc_lv<16> > tmp_81_fu_519_p2;
    sc_signal< sc_lv<6> > tmp_761_fu_543_p1;
    sc_signal< sc_lv<1> > tmp_760_fu_525_p3;
    sc_signal< sc_lv<1> > p_s_fu_547_p2;
    sc_signal< sc_lv<1> > tmp_84_fu_553_p2;
    sc_signal< sc_lv<1> > tmp_762_fu_559_p3;
    sc_signal< sc_lv<8> > tmp_140_1_fu_577_p0;
    sc_signal< sc_lv<8> > tmp_140_1_fu_577_p1;
    sc_signal< sc_lv<16> > tmp_140_1_fu_577_p2;
    sc_signal< sc_lv<6> > tmp_764_fu_601_p1;
    sc_signal< sc_lv<1> > tmp_763_fu_583_p3;
    sc_signal< sc_lv<1> > p_1_fu_605_p2;
    sc_signal< sc_lv<1> > tmp_143_1_fu_611_p2;
    sc_signal< sc_lv<1> > tmp_765_fu_617_p3;
    sc_signal< sc_lv<8> > tmp_140_2_fu_635_p0;
    sc_signal< sc_lv<8> > tmp_140_2_fu_635_p1;
    sc_signal< sc_lv<16> > tmp_140_2_fu_635_p2;
    sc_signal< sc_lv<6> > tmp_767_fu_659_p1;
    sc_signal< sc_lv<1> > tmp_766_fu_641_p3;
    sc_signal< sc_lv<1> > p_2_fu_663_p2;
    sc_signal< sc_lv<1> > tmp_143_2_fu_669_p2;
    sc_signal< sc_lv<1> > tmp_768_fu_675_p3;
    sc_signal< sc_lv<8> > tmp_140_3_fu_693_p0;
    sc_signal< sc_lv<8> > tmp_140_3_fu_693_p1;
    sc_signal< sc_lv<16> > tmp_140_3_fu_693_p2;
    sc_signal< sc_lv<6> > tmp_770_fu_717_p1;
    sc_signal< sc_lv<1> > tmp_769_fu_699_p3;
    sc_signal< sc_lv<1> > p_3_fu_721_p2;
    sc_signal< sc_lv<1> > tmp_143_3_fu_727_p2;
    sc_signal< sc_lv<1> > tmp_771_fu_733_p3;
    sc_signal< sc_lv<8> > tmp_147_cast_fu_759_p1;
    sc_signal< sc_lv<8> > tmp1_fu_762_p2;
    sc_signal< sc_lv<8> > tmp_147_1_cast_fu_773_p1;
    sc_signal< sc_lv<8> > tmp2_fu_776_p2;
    sc_signal< sc_lv<8> > tmp_147_2_cast_fu_787_p1;
    sc_signal< sc_lv<8> > tmp3_fu_790_p2;
    sc_signal< sc_lv<8> > tmp_147_3_cast_fu_801_p1;
    sc_signal< sc_lv<8> > tmp4_fu_804_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_835_p18;
    sc_signal< sc_lv<8> > tmp_119_fu_878_p18;
    sc_signal< sc_lv<8> > tmp_120_fu_921_p18;
    sc_signal< sc_lv<8> > tmp_121_fu_964_p18;
    sc_signal< sc_lv<8> > result_V_3_fu_1001_p2;
    sc_signal< sc_lv<8> > result_V_2_fu_958_p2;
    sc_signal< sc_lv<8> > result_V_1_fu_915_p2;
    sc_signal< sc_lv<8> > result_V_fu_872_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<23> ap_const_lv23_400000;
    static const sc_lv<23> ap_const_lv23_1;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_21;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<8> ap_const_lv8_25;
    static const sc_lv<8> ap_const_lv8_15;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_24;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_23;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_F5;
    static const sc_lv<8> ap_const_lv8_29;
    static const sc_lv<8> ap_const_lv8_44;
    static const sc_lv<8> ap_const_lv8_32;
    static const sc_lv<8> ap_const_lv8_1B;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_1C;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<8> ap_const_lv8_1E;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_30;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<8> ap_const_lv8_19;
    static const sc_lv<8> ap_const_lv8_27;
    static const sc_lv<8> ap_const_lv8_16;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_E;
    static const sc_lv<8> ap_const_lv8_14;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<8> ap_const_lv8_60;
    static const sc_lv<8> ap_const_lv8_1F;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_var_for_const30();
    void thread_ap_var_for_const31();
    void thread_ap_var_for_const32();
    void thread_ap_var_for_const33();
    void thread_ap_var_for_const34();
    void thread_ap_var_for_const35();
    void thread_ap_var_for_const36();
    void thread_ap_var_for_const37();
    void thread_ap_var_for_const38();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten8_fu_353_p2();
    void thread_exitcond_flatten_fu_365_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next8_fu_359_p2();
    void thread_indvar_flatten_next_fu_497_p3();
    void thread_indvar_flatten_op_fu_491_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_767_p2();
    void thread_macRegisters_1_V_fu_781_p2();
    void thread_macRegisters_2_V_fu_795_p2();
    void thread_macRegisters_3_V_fu_809_p2();
    void thread_nm_1_fu_413_p2();
    void thread_nm_mid2_fu_461_p3();
    void thread_nm_mid_fu_371_p3();
    void thread_nm_t_mid2_fu_453_p3();
    void thread_nm_t_mid_fu_387_p3();
    void thread_not_exitcond_flatten_fu_395_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_071_assign_1_fu_512_p1();
    void thread_p_1_fu_605_p2();
    void thread_p_2_fu_663_p2();
    void thread_p_3_fu_721_p2();
    void thread_p_s_fu_547_p2();
    void thread_real_start();
    void thread_result_V_1_fu_915_p2();
    void thread_result_V_2_fu_958_p2();
    void thread_result_V_3_fu_1001_p2();
    void thread_result_V_fu_872_p2();
    void thread_sf_1_fu_485_p2();
    void thread_sf_cast1_fu_469_p1();
    void thread_sf_mid2_fu_425_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_762_p2();
    void thread_tmp2_fu_776_p2();
    void thread_tmp3_fu_790_p2();
    void thread_tmp4_fu_804_p2();
    void thread_tmp_140_1_fu_577_p0();
    void thread_tmp_140_1_fu_577_p1();
    void thread_tmp_140_1_fu_577_p2();
    void thread_tmp_140_2_fu_635_p0();
    void thread_tmp_140_2_fu_635_p1();
    void thread_tmp_140_2_fu_635_p2();
    void thread_tmp_140_3_fu_693_p0();
    void thread_tmp_140_3_fu_693_p1();
    void thread_tmp_140_3_fu_693_p2();
    void thread_tmp_143_1_fu_611_p2();
    void thread_tmp_143_2_fu_669_p2();
    void thread_tmp_143_3_fu_727_p2();
    void thread_tmp_147_1_cast_fu_773_p1();
    void thread_tmp_147_1_fu_625_p2();
    void thread_tmp_147_2_cast_fu_787_p1();
    void thread_tmp_147_2_fu_683_p2();
    void thread_tmp_147_3_cast_fu_801_p1();
    void thread_tmp_147_3_fu_741_p2();
    void thread_tmp_147_cast_fu_759_p1();
    void thread_tmp_363_fu_401_p2();
    void thread_tmp_364_fu_419_p2();
    void thread_tmp_759_fu_433_p1();
    void thread_tmp_75_fu_345_p3();
    void thread_tmp_75_mid1_fu_437_p3();
    void thread_tmp_75_mid2_fu_445_p3();
    void thread_tmp_75_mid_fu_379_p3();
    void thread_tmp_760_fu_525_p3();
    void thread_tmp_761_fu_543_p1();
    void thread_tmp_762_fu_559_p3();
    void thread_tmp_763_fu_583_p3();
    void thread_tmp_764_fu_601_p1();
    void thread_tmp_765_fu_617_p3();
    void thread_tmp_766_fu_641_p3();
    void thread_tmp_767_fu_659_p1();
    void thread_tmp_768_fu_675_p3();
    void thread_tmp_769_fu_699_p3();
    void thread_tmp_76_mid_fu_407_p2();
    void thread_tmp_770_fu_717_p1();
    void thread_tmp_771_fu_733_p3();
    void thread_tmp_78_fu_473_p2();
    void thread_tmp_79_fu_505_p1();
    void thread_tmp_81_fu_519_p0();
    void thread_tmp_81_fu_519_p1();
    void thread_tmp_81_fu_519_p2();
    void thread_tmp_84_fu_553_p2();
    void thread_tmp_86_fu_567_p2();
    void thread_tmp_87_fu_479_p2();
    void thread_tmp_fu_341_p1();
    void thread_weights3_m_weights_V_1_address0();
    void thread_weights3_m_weights_V_1_ce0();
    void thread_weights3_m_weights_V_2_address0();
    void thread_weights3_m_weights_V_2_ce0();
    void thread_weights3_m_weights_V_3_address0();
    void thread_weights3_m_weights_V_3_ce0();
    void thread_weights3_m_weights_V_address0();
    void thread_weights3_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
